{"version":3,"sources":["core/Shape.js"],"names":[],"mappings":"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","file":"Shape.js","sourcesContent":["import * as THREE from 'three';\n\nimport {loadMaterial} from '../extras/api';\nimport {Loop} from '../extensions/Loop';\nimport {defaults} from '../utils/defaults';\nimport {World} from './World';\nimport {WHSObject} from './Object';\n\nclass Shape extends WHSObject {\n  /**\n   * Constructing WHS.Shape object.\n   *\n   * @param {Object} params - Inputed parameters.\n   * @param {String} type - Shape type.\n   * @return {WHS.Shape}\n   */\n  constructor(params = {}, type = 'mesh') {\n    const _set = (x, y, z) => {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    };\n\n    super({\n      mass: 10,\n      build: true,\n      softbody: false,\n      geometry: {},\n\n      material: {\n        kind: 'basic'\n      },\n\n      helpers: {\n        box: false,\n        boundingBox: false,\n        edges: false,\n        faceNormals: false\n      },\n\n      pos: {\n        x: 0,\n        y: 0,\n        z: 0,\n        set: _set\n      },\n\n      rot: {\n        x: 0,\n        y: 0,\n        z: 0,\n        set: _set\n      },\n\n      scale: {\n        x: 1,\n        y: 1,\n        z: 1,\n        set: _set\n      },\n\n      target: {\n        x: 0,\n        y: 0,\n        z: 0,\n        set: _set\n      },\n\n      morph: {\n        speed: 1,\n        duration: 1\n      },\n\n      physics: !!'physics'\n    });\n\n    if (params instanceof THREE.Object3D) {\n      super.setParams({\n        pos: {x: params.position.x, y: params.position.y, z: params.position.z},\n        rot: {x: params.rotation.x, y: params.rotation.y, z: params.rotation.z},\n        scale: {x: params.scale.x, y: params.scale.y, z: params.scale.z},\n        mass: params.mass,\n        physics: Boolean(params._physijs)\n      });\n    } else super.setParams(params);\n\n    const scope = Object.assign(this,\n      {\n        _type: type,\n        __c_pos: false,\n        __c_rot: false,\n\n        wait: [],\n        helpers: {\n          box: false\n        },\n\n        physics: params.physics\n      }\n    );\n\n    if (params instanceof THREE.Object3D) this.setNative(params);\n    if (defaults.debug) console.debug(`@WHS.Shape: Shape ${scope._type} found.`, scope);\n\n    return scope;\n  }\n\n  wait(promise) {\n    this.wait.push(promise);\n    return this;\n  }\n\n  /**\n   * Applying shadow & position & rotation.\n   *\n   * @param {...String} tags - Tags that defines what to do with shape\n   * additionally.\n   */\n  wrap(...tags) {\n    const _scope = this;\n\n    if (tags.indexOf('wait') >= 0) {\n      return new Promise((resolve, reject) => {\n        Promise.all(_scope.wait).then(() => {\n          try {\n            if (tags.indexOf('no-shadows') < 0) {\n              _scope.getNative().castShadow = true;\n              _scope.getNative().receiveShadow = true;\n            }\n\n            if (tags.indexOf('no-transforms') < 0) {\n              if (!_scope.getParams().softbody) {\n                _scope.position.set(\n                  _scope.__params.pos.x,\n                  _scope.__params.pos.y,\n                  _scope.__params.pos.z\n                );\n\n                _scope.rotation.set(\n                  _scope.__params.rot.x,\n                  _scope.__params.rot.y,\n                  _scope.__params.rot.z\n                );\n\n                _scope.scale.set(\n                  _scope.__params.scale.x,\n                  _scope.__params.scale.y,\n                  _scope.__params.scale.z\n                );\n              }\n            }\n\n            // Box helper.\n            if (_scope.__params.helpers.box) {\n              _scope.helpers.box = new THREE.BoxHelper(\n                _scope.getNative()\n              );\n            }\n\n            // Bounding box helper.\n            if (_scope.__params.helpers.boundingBox) {\n              _scope.helpers.boundingBox = new THREE.BoundingBoxHelper(\n                _scope.getNative(),\n                _scope.__params.helpers.boundingBox.color\n                ? _scope.__params.helpers.boundingBox.color\n                : 0xffffff\n              );\n            }\n\n            // Edges helper.\n            if (_scope.__params.helpers.edges) {\n              _scope.helpers.edges = new THREE.EdgesHelper(\n                _scope.getNative(),\n                _scope.__params.helpers.edges.color\n                ? _scope.__params.helpers.edges.color\n                : 0xffffff\n              );\n            }\n\n            // faceNormals helper.\n            if (_scope.__params.helpers.faceNormals) {\n              _scope.helpers.faceNormals = new THREE.FaceNormalsHelper(\n                _scope.getNative(),\n                _scope.__params.helpers.faceNormals.size\n                ? _scope.__params.helpers.faceNormals.size\n                : 2,\n                _scope.__params.helpers.faceNormals.color\n                ? _scope.__params.helpers.faceNormals.color\n                : 0xffffff,\n                _scope.__params.helpers.faceNormals.linewidth\n                ? _scope.__params.helpers.faceNormals.linewidth\n                : 1\n              );\n            }\n\n            // vertexNormals helper.\n            if (_scope.__params.helpers.vertexNormals) {\n              _scope.helpers.vertexNormals = new THREE.VertexNormalsHelper(\n                _scope.getNative(),\n                _scope.__params.helpers.vertexNormals.size\n                ? _scope.__params.helpers.vertexNormals.size\n                : 2,\n                _scope.__params.helpers.vertexNormals.color\n                ? _scope.__params.helpers.vertexNormals.color\n                : 0xffffff,\n                _scope.__params.helpers.vertexNormals.linewidth\n                ? _scope.__params.helpers.vertexNormals.linewidth\n                : 1\n              );\n            }\n\n            if (defaults.debug) console.debug(`@WHS.Shape: Shape ${_scope._type} is ready.`, _scope);\n\n            _scope.emit('ready');\n\n            resolve(_scope);\n          } catch (err) {\n            console.error(err.message);\n            reject();\n          }\n        });\n      });\n    } else {\n      return new Promise((resolve, reject) => {\n        try {\n          if (tags.indexOf('no-shadows') < 0) {\n            _scope.getNative().castShadow = true;\n            _scope.getNative().receiveShadow = true;\n          }\n\n          if (tags.indexOf('no-transforms') < 0) {\n            if (!_scope.getParams().softbody) {\n              _scope.position.set(\n                _scope.__params.pos.x,\n                _scope.__params.pos.y,\n                _scope.__params.pos.z\n              );\n\n              _scope.rotation.set(\n                _scope.__params.rot.x,\n                _scope.__params.rot.y,\n                _scope.__params.rot.z\n              );\n\n              _scope.scale.set(\n                _scope.__params.scale.x,\n                _scope.__params.scale.y,\n                _scope.__params.scale.z\n              );\n            }\n          }\n\n          // Box helper.\n          if (_scope.__params.helpers.box) {\n            _scope.helpers.box = new THREE.BoxHelper(\n              _scope.getNative()\n            );\n          }\n\n          // Bounding box helper.\n          if (_scope.__params.helpers.boundingBox) {\n            _scope.helpers.boundingBox = new THREE.BoundingBoxHelper(\n              _scope.getNative(),\n              _scope.__params.helpers.boundingBox.color\n              ? _scope.__params.helpers.boundingBox.color\n              : 0xffffff\n            );\n          }\n\n          // Edges helper.\n          if (_scope.__params.helpers.edges) {\n            _scope.helpers.edges = new THREE.EdgesHelper(\n              _scope.getNative(),\n              _scope.__params.helpers.edges.color\n              ? _scope.__params.helpers.edges.color\n              : 0xffffff\n            );\n          }\n\n          // faceNormals helper.\n          if (_scope.__params.helpers.faceNormals) {\n            _scope.helpers.faceNormals = new THREE.FaceNormalsHelper(\n              _scope.getNative(),\n              _scope.__params.helpers.faceNormals.size\n              ? _scope.__params.helpers.faceNormals.size\n              : 2,\n              _scope.__params.helpers.faceNormals.color\n              ? _scope.__params.helpers.faceNormals.color\n              : 0xffffff,\n              _scope.__params.helpers.faceNormals.linewidth\n              ? _scope.__params.helpers.faceNormals.linewidth\n              : 1\n            );\n          }\n\n          // vertexNormals helper.\n          if (_scope.__params.helpers.vertexNormals) {\n            _scope.helpers.vertexNormals = new THREE.VertexNormalsHelper(\n              _scope.getNative(),\n              _scope.__params.helpers.vertexNormals.size\n              ? _scope.__params.helpers.vertexNormals.size\n              : 2,\n              _scope.__params.helpers.vertexNormals.color\n              ? _scope.__params.helpers.vertexNormals.color\n              : 0xffffff,\n              _scope.__params.helpers.vertexNormals.linewidth\n              ? _scope.__params.helpers.vertexNormals.linewidth\n              : 1\n            );\n          }\n\n          if (defaults.debug) console.debug(`@WHS.Shape: Shape ${_scope._type} is ready.`, _scope);\n\n          resolve(_scope);\n\n          _scope.emit('ready');\n        } catch (err) {\n          console.error(err.message);\n          reject();\n        }\n      });\n    }\n  }\n\n  /**\n   * Add shape to WHS.World object.\n   *\n   * @param {WHS.World} parent - World, were this shape will be.\n   * @param {...String} tags - Tags for compiling.\n   */\n  addTo(parent, ...tags) {\n    const _helpers = this.helpers,\n      _scope = this;\n\n    _scope.parent = parent;\n\n    if (tags.indexOf('wait') >= 0) {\n      return new Promise((resolve, reject) => {\n        Promise.all(_scope.wait).then(() => {\n          try {\n            const parentNative = _scope.parent instanceof World\n              ? _scope.parent.getScene()\n              : _scope.parent.getNative();\n\n            parentNative.add(_scope.getNative());\n            _scope.parent.children.push(_scope);\n\n            if (_scope.__params.softbody) {\n              _scope.native.position.set(0, 0, 0);\n              _scope.native.rotation.set(0, 0, 0);\n            }\n\n            if (_scope.__params.helpers.box) parentNative.add(_helpers.box);\n            if (_scope.__params.helpers.boundingBox) parentNative.add(_helpers.boundingBox);\n            if (_scope.__params.helpers.edges) parentNative.add(_helpers.edges);\n            if (_scope.__params.helpers.faceNormals) parentNative.add(_helpers.faceNormals);\n            if (_scope.__params.helpers.vertexNormals) parentNative.add(_helpers.vertexNormals);\n          } catch (err) {\n            console.error(err.message);\n            reject();\n          } finally {\n            if (_scope._wait) {\n              _scope.getNative().addEventListener('ready', () => {\n                resolve(_scope);\n              });\n            } else resolve(_scope);\n\n            _scope.getNative().addEventListener('collide', () => {\n              _scope.emit('collide');\n            });\n\n            if (defaults.debug) {\n              console.debug(\n                `@WHS.Shape: Shape ${_scope._type} was added to world.`,\n                [_scope, _scope.parent]\n              );\n            }\n          }\n        });\n      });\n    } else {\n      return new Promise((resolve, reject) => {\n        try {\n          const parentNative = _scope.parent instanceof World\n            ? _scope.parent.getScene()\n            : _scope.parent.getNative();\n\n          parentNative.add(_scope.getNative());\n          _scope.parent.children.push(_scope);\n\n          if (_scope.__params.softbody) {\n            _scope.native.position.set(0, 0, 0);\n            _scope.native.rotation.set(0, 0, 0);\n          }\n\n          if (_scope.__params.helpers.box) parentNative.add(_helpers.box);\n          if (_scope.__params.helpers.boundingBox) parentNative.add(_helpers.boundingBox);\n          if (_scope.__params.helpers.edges) parentNative.add(_helpers.edges);\n          if (_scope.__params.helpers.faceNormals) parentNative.add(_helpers.faceNormals);\n          if (_scope.__params.helpers.vertexNormals) parentNative.add(_helpers.vertexNormals);\n        } catch (err) {\n          console.error(err.message);\n          reject();\n        } finally {\n          if (_scope._wait) {\n            _scope.getNative().addEventListener('ready', () => {\n              resolve(_scope);\n            });\n          } else resolve(_scope);\n\n          _scope.getNative().addEventListener('collide', () => {\n            _scope.emit('ready');\n          });\n\n          if (defaults.debug) {\n            console.debug(\n                `@WHS.Shape: Shape ${_scope._type} was added to world.`,\n                [_scope, _scope.parent]\n              );\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Initialize shape's material object.\n   */\n  _initMaterial(params = {}) {\n    return this.getParams().physics\n      ? loadMaterial(params)._materialP\n      : loadMaterial(params)._material;\n  }\n\n  /**\n   * Clone shape.\n   */\n  clone() {\n    return new WHS.Shape(this.getParams(), this._type).copy(this);\n  }\n\n  /**\n   * Copy shape.\n   *\n   * @param {WHS.Shape} source - Source object, that will be applied to this.\n   */\n  copy(source) {\n    const sourceNative = source.getNative();\n\n    if (source.getParams().softbody)\n      this.setNative(new sourceNative.constructor(sourceNative.tempGeometry.clone(), sourceNative.material, source.getParams()));\n    else this.setNative(sourceNative.clone());\n\n    this.wrap();\n\n    this.position.copy(source.position);\n    this.rotation.copy(source.rotation);\n    this.quaternion.copy(source.quaternion);\n\n    this.getNative().mass = source.getNative().mass;\n\n    return this;\n  }\n\n  /**\n   * Remove this shape from world.\n   *\n   * @return {WHS.Shape} - this.\n   */\n  remove() {\n    this.parent.getScene().remove(this.getNative());\n\n    this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    this.parent = null;\n\n    this.emit('remove');\n\n    if (defaults.debug) {\n      console.debug(\n        `@WHS.Shape: Shape ${this._type} was removed from world`,\n        [this]\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * @return {WHS.World} - World object.\n   */\n  getWorld() {\n    let p = this.parent;\n\n    while (!(p instanceof World)) {\n      if (p) p = p.parent;\n      else return false;\n    }\n\n    return p;\n  }\n\n  get position() {\n    return this.getNative().position;\n  }\n\n  set position(vector3) {\n    const pos = this.getNative().position,\n      native = this.getNative();\n\n    Object.defineProperties(pos, {\n      x: {\n        get() {\n          return this._x;\n        },\n\n        set(x) {\n          native.__dirtyPosition = true;\n          this._x = x;\n        }\n      },\n      y: {\n        get() {\n          return this._y;\n        },\n\n        set(y) {\n          native.__dirtyPosition = true;\n          this._y = y;\n        }\n      },\n      z: {\n        get() {\n          return this._z;\n        },\n\n        set(z) {\n          native.__dirtyPosition = true;\n          this._z = z;\n        }\n      }\n    });\n\n    native.__dirtyPosition = true;\n\n    return pos.copy(vector3);\n  }\n\n  get quaternion() {\n    this.__c_rot = true;\n    return this.getNative().quaternion;\n  }\n\n  set quaternion(quaternion) {\n    const quat = this.getNative().quaternion,\n      native = this.getNative();\n\n    quat.copy(quaternion);\n\n    quat.onChange(() => {\n      if (this.__c_rot) {\n        if (native.__dirtyRotation === true) {\n          this.__c_rot = false;\n          native.__dirtyRotation = false;\n        }\n        native.__dirtyRotation = true;\n      }\n    });\n\n    return quat;\n  }\n\n  get rotation() {\n    this.__c_rot = true;\n    return this.getNative().rotation;\n  }\n\n  set rotation(euler) {\n    const rot = this.getNative().rotation,\n      native = this.getNative();\n\n    rot.copy(euler);\n\n    rot.onChange(() => {\n      if (this.__c_rot) {\n        this.quaternion.copy(new THREE.Quaternion().setFromEuler(rot));\n        native.__dirtyRotation = true;\n        // this.__c_rot = false;\n      }\n    });\n\n    return rot;\n  }\n\n  get scale() {\n    return this.getNative().scale;\n  }\n\n  set scale(vector3) {\n    this.getNative().scale = vector3;\n    return this.getNative().scale;\n  }\n\n  G_translate(x = 0, y = 0, z = 0) {\n    this.native.geometry.translate(x, y, z);\n  }\n\n  G_(params = {}) {\n    if (this.buildGeometry) {\n      this.native.geometry = this.buildGeometry(\n        this.updateParams({geometry: params})\n      );\n    }\n  }\n\n  M_(params = {}) {\n    this.native.material = this._initMaterial(\n      this.updateParams({material: params}).material\n    );\n  }\n\n  set M_color(val) {\n    this.updateParams({material: {color: val}});\n    this.native.material.color = new THREE.Color(val);\n  }\n\n  get M_color() {\n    return this.native.material.color;\n  }\n\n  proccessSoftbodyGeometry(geometry) {\n    geometry.rotateX(this.__params.rot.x);\n    geometry.rotateY(this.__params.rot.x);\n    geometry.rotateZ(this.__params.rot.x);\n\n    geometry.scale(\n      this.__params.scale.x,\n      this.__params.scale.y,\n      this.__params.scale.z\n    );\n\n    geometry.translate(\n      this.__params.pos.x,\n      this.__params.pos.y,\n      this.__params.pos.z\n    );\n  }\n\n  /* Access private data */\n\n  setNative(native) {\n    this.native = native;\n    this.position = this.native.position.clone();\n    this.quaternion = this.native.quaternion.clone();\n    this.rotation = this.native.rotation.clone();\n\n    return this.native;\n  }\n\n  getNative() {\n    return this.native;\n  }\n\n  setMaterial(material) {\n    this.native.material = material;\n    return this.native.material;\n  }\n\n  setAngularVelocity(...args) {\n    return this.getNative().setAngularVelocity(...args);\n  }\n\n  setLinearVelocity(...args) {\n    return this.getNative().setLinearVelocity(...args);\n  }\n\n  follow(curve, time = 1000, loop) {\n    const _scope = this,\n      gEnd = time;\n\n    let animation = new Loop(clock => {\n      const u = clock.getElapsedTime() * 1000 / gEnd,\n        vec1 = curve.getPoint(u % 1),\n        vec2 = curve.getPoint((u + 0.01) % 1);\n\n      _scope.position.set(vec1.x, vec1.y, vec1.z);\n      _scope.getNative().lookAt(vec2);\n    });\n\n    _scope.getWorld().addLoop(animation);\n\n    animation.start();\n\n    if (loop) {\n      setInterval(() => {\n        animation.stop();\n\n        animation = new Loop(clock => {\n          const u = clock.getElapsedTime() * 1000 / gEnd,\n            vec1 = curve.getPoint(u % 1),\n            vec2 = curve.getPoint((u + 0.01) % 1);\n\n          _scope.position.set(vec1.x, vec1.y, vec1.z);\n          _scope.getNative().lookAt(vec2);\n        });\n\n        _scope.getWorld().addLoop(animation);\n\n        animation.start();\n      }, time);\n    } else {\n      setTimeout(() => {\n        animation.stop();\n        _scope.getWorld().removeLoop(animation);\n      }, time);\n    }\n  }\n}\n\nexport {\n  Shape\n};\n"]}