{"version":3,"sources":["core/Shape.js"],"names":[],"mappings":"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","file":"Shape.js","sourcesContent":["import * as THREE from 'three';\r\n\r\nimport {loadMaterial} from '../extras/api';\r\nimport {Loop} from '../extensions/Loop';\r\nimport {defaults} from '../utils/defaults';\r\nimport {World} from './World';\r\nimport {WHSObject} from './Object';\r\n\r\nclass Shape extends WHSObject {\r\n  /**\r\n   * Constructing WHS.Shape object.\r\n   *\r\n   * @param {Object} params - Inputed parameters.\r\n   * @param {String} type - Shape type.\r\n   * @return {WHS.Shape}\r\n   */\r\n  constructor(params, type) {\r\n    if (!type) console.error('@constructor: Please specify \" type \".');\r\n\r\n    const _set = (x, y, z) => {\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z;\r\n    };\r\n\r\n    super({\r\n      mass: 10,\r\n      build: true,\r\n      geometry: {},\r\n\r\n      material: {\r\n        kind: 'basic'\r\n      },\r\n\r\n      helpers: {\r\n        box: false,\r\n        boundingBox: false,\r\n        edges: false,\r\n        faceNormals: false\r\n      },\r\n\r\n      pos: {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        set: _set\r\n      },\r\n\r\n      rot: {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        set: _set\r\n      },\r\n\r\n      scale: {\r\n        x: 1,\r\n        y: 1,\r\n        z: 1,\r\n        set: _set\r\n      },\r\n\r\n      target: {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        set: _set\r\n      },\r\n\r\n      morph: {\r\n        speed: 1,\r\n        duration: 1\r\n      },\r\n\r\n      physics: true\r\n\r\n    });\r\n\r\n    super.setParams(params);\r\n\r\n    const scope = Object.assign(this,\r\n      {\r\n        _type: type,\r\n        __params: params,\r\n        __c_pos: false,\r\n        __c_rot: false,\r\n\r\n        wait: [],\r\n        helpers: {\r\n          box: false\r\n        },\r\n\r\n        physics: params.physics\r\n      });\r\n\r\n    if (defaults.debug) console.debug(`@WHS.Shape: Shape ${scope._type} found.`, scope);\r\n\r\n    return scope;\r\n  }\r\n\r\n  wait(promise) {\r\n    this.wait.push(promise);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Applying shadow & position & rotation.\r\n   *\r\n   * @param {...String} tags - Tags that defines what to do with shape\r\n   * additionally.\r\n   */\r\n  wrap(...tags) {\r\n    const _scope = this;\r\n\r\n    if (tags.indexOf('wait') >= 0) {\r\n      return new Promise((resolve, reject) => {\r\n        Promise.all(_scope.wait).then(() => {\r\n          try {\r\n            if (tags.indexOf('no-shadows') < 0) {\r\n              _scope.getNative().castShadow = true;\r\n              _scope.getNative().receiveShadow = true;\r\n            }\r\n\r\n            if (tags.indexOf('no-transforms') < 0) {\r\n              _scope.position.set(\r\n                _scope.__params.pos.x,\r\n                _scope.__params.pos.y,\r\n                _scope.__params.pos.z\r\n              );\r\n\r\n              _scope.rotation.set(\r\n                _scope.__params.rot.x,\r\n                _scope.__params.rot.y,\r\n                _scope.__params.rot.z\r\n              );\r\n\r\n              _scope.scale.set(\r\n                _scope.__params.scale.x,\r\n                _scope.__params.scale.y,\r\n                _scope.__params.scale.z\r\n              );\r\n            }\r\n\r\n            // Box helper.\r\n            if (_scope.__params.helpers.box) {\r\n              _scope.helpers.box = new THREE.BoxHelper(\r\n                _scope.getNative()\r\n              );\r\n            }\r\n\r\n            // Bounding box helper.\r\n            if (_scope.__params.helpers.boundingBox) {\r\n              _scope.helpers.boundingBox = new THREE.BoundingBoxHelper(\r\n                _scope.getNative(),\r\n                _scope.__params.helpers.boundingBox.color\r\n                ? _scope.__params.helpers.boundingBox.color\r\n                : 0xffffff\r\n              );\r\n            }\r\n\r\n            // Edges helper.\r\n            if (_scope.__params.helpers.edges) {\r\n              _scope.helpers.edges = new THREE.EdgesHelper(\r\n                _scope.getNative(),\r\n                _scope.__params.helpers.edges.color\r\n                ? _scope.__params.helpers.edges.color\r\n                : 0xffffff\r\n              );\r\n            }\r\n\r\n            // faceNormals helper.\r\n            if (_scope.__params.helpers.faceNormals) {\r\n              _scope.helpers.faceNormals = new THREE.FaceNormalsHelper(\r\n                _scope.getNative(),\r\n                _scope.__params.helpers.faceNormals.size\r\n                ? _scope.__params.helpers.faceNormals.size\r\n                : 2,\r\n                _scope.__params.helpers.faceNormals.color\r\n                ? _scope.__params.helpers.faceNormals.color\r\n                : 0xffffff,\r\n                _scope.__params.helpers.faceNormals.linewidth\r\n                ? _scope.__params.helpers.faceNormals.linewidth\r\n                : 1\r\n              );\r\n            }\r\n\r\n            // vertexNormals helper.\r\n            if (_scope.__params.helpers.vertexNormals) {\r\n              _scope.helpers.vertexNormals = new THREE.VertexNormalsHelper(\r\n                _scope.getNative(),\r\n                _scope.__params.helpers.vertexNormals.size\r\n                ? _scope.__params.helpers.vertexNormals.size\r\n                : 2,\r\n                _scope.__params.helpers.vertexNormals.color\r\n                ? _scope.__params.helpers.vertexNormals.color\r\n                : 0xffffff,\r\n                _scope.__params.helpers.vertexNormals.linewidth\r\n                ? _scope.__params.helpers.vertexNormals.linewidth\r\n                : 1\r\n              );\r\n            }\r\n\r\n            if (defaults.debug) console.debug(`@WHS.Shape: Shape ${_scope._type} is ready.`, _scope);\r\n\r\n            _scope.emit('ready');\r\n\r\n            resolve(_scope);\r\n          } catch (err) {\r\n            console.error(err.message);\r\n            reject();\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        try {\r\n          if (tags.indexOf('no-shadows') < 0) {\r\n            _scope.getNative().castShadow = true;\r\n            _scope.getNative().receiveShadow = true;\r\n          }\r\n\r\n          if (tags.indexOf('no-transforms') < 0) {\r\n            _scope.position.set(\r\n              _scope.__params.pos.x,\r\n              _scope.__params.pos.y,\r\n              _scope.__params.pos.z\r\n            );\r\n\r\n            _scope.rotation.set(\r\n              _scope.__params.rot.x,\r\n              _scope.__params.rot.y,\r\n              _scope.__params.rot.z\r\n            );\r\n\r\n            _scope.scale.set(\r\n              _scope.__params.scale.x,\r\n              _scope.__params.scale.y,\r\n              _scope.__params.scale.z\r\n            );\r\n          }\r\n\r\n          // Box helper.\r\n          if (_scope.__params.helpers.box) {\r\n            _scope.helpers.box = new THREE.BoxHelper(\r\n              _scope.getNative()\r\n            );\r\n          }\r\n\r\n          // Bounding box helper.\r\n          if (_scope.__params.helpers.boundingBox) {\r\n            _scope.helpers.boundingBox = new THREE.BoundingBoxHelper(\r\n              _scope.getNative(),\r\n              _scope.__params.helpers.boundingBox.color\r\n              ? _scope.__params.helpers.boundingBox.color\r\n              : 0xffffff\r\n            );\r\n          }\r\n\r\n          // Edges helper.\r\n          if (_scope.__params.helpers.edges) {\r\n            _scope.helpers.edges = new THREE.EdgesHelper(\r\n              _scope.getNative(),\r\n              _scope.__params.helpers.edges.color\r\n              ? _scope.__params.helpers.edges.color\r\n              : 0xffffff\r\n            );\r\n          }\r\n\r\n          // faceNormals helper.\r\n          if (_scope.__params.helpers.faceNormals) {\r\n            _scope.helpers.faceNormals = new THREE.FaceNormalsHelper(\r\n              _scope.getNative(),\r\n              _scope.__params.helpers.faceNormals.size\r\n              ? _scope.__params.helpers.faceNormals.size\r\n              : 2,\r\n              _scope.__params.helpers.faceNormals.color\r\n              ? _scope.__params.helpers.faceNormals.color\r\n              : 0xffffff,\r\n              _scope.__params.helpers.faceNormals.linewidth\r\n              ? _scope.__params.helpers.faceNormals.linewidth\r\n              : 1\r\n            );\r\n          }\r\n\r\n          // vertexNormals helper.\r\n          if (_scope.__params.helpers.vertexNormals) {\r\n            _scope.helpers.vertexNormals = new THREE.VertexNormalsHelper(\r\n              _scope.getNative(),\r\n              _scope.__params.helpers.vertexNormals.size\r\n              ? _scope.__params.helpers.vertexNormals.size\r\n              : 2,\r\n              _scope.__params.helpers.vertexNormals.color\r\n              ? _scope.__params.helpers.vertexNormals.color\r\n              : 0xffffff,\r\n              _scope.__params.helpers.vertexNormals.linewidth\r\n              ? _scope.__params.helpers.vertexNormals.linewidth\r\n              : 1\r\n            );\r\n          }\r\n\r\n          if (defaults.debug) console.debug(`@WHS.Shape: Shape ${_scope._type} is ready.`, _scope);\r\n\r\n          resolve(_scope);\r\n\r\n          _scope.emit('ready');\r\n        } catch (err) {\r\n          console.error(err.message);\r\n          reject();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add shape to WHS.World object.\r\n   *\r\n   * @param {WHS.World} parent - World, were this shape will be.\r\n   * @param {...String} tags - Tags for compiling.\r\n   */\r\n  addTo(parent, ...tags) {\r\n    const _helpers = this.helpers,\r\n      _scope = this;\r\n\r\n    _scope.parent = parent;\r\n\r\n    if (tags.indexOf('wait') >= 0) {\r\n      return new Promise((resolve, reject) => {\r\n        Promise.all(_scope.wait).then(() => {\r\n          try {\r\n            const parentNative = _scope.parent instanceof World\r\n              ? _scope.parent.getScene()\r\n              : _scope.parent.getNative();\r\n\r\n            parentNative.add(_scope.getNative());\r\n            _scope.parent.children.push(_scope);\r\n\r\n            if (_scope.__params.helpers.box) parentNative.add(_helpers.box);\r\n\r\n            if (_scope.__params.helpers.boundingBox) parentNative.add(_helpers.boundingBox);\r\n\r\n            if (_scope.__params.helpers.edges) parentNative.add(_helpers.edges);\r\n\r\n            if (_scope.__params.helpers.faceNormals) parentNative.add(_helpers.faceNormals);\r\n\r\n            if (_scope.__params.helpers.vertexNormals) parentNative.add(_helpers.vertexNormals);\r\n          } catch (err) {\r\n            console.error(err.message);\r\n            reject();\r\n          } finally {\r\n            if (_scope._wait) {\r\n              _scope.getNative().addEventListener('ready', () => {\r\n                resolve(_scope);\r\n              });\r\n            } else resolve(_scope);\r\n\r\n            _scope.getNative().addEventListener('collide', () => {\r\n              _scope.emit('collide');\r\n            });\r\n\r\n            if (defaults.debug) {\r\n              console.debug(\r\n                `@WHS.Shape: Shape ${_scope._type} was added to world.`,\r\n                [_scope, _scope.parent]\r\n              );\r\n            }\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      return new Promise((resolve, reject) => {\r\n        try {\r\n          const parentNative = _scope.parent instanceof World\r\n            ? _scope.parent.getScene()\r\n            : _scope.parent.getNative();\r\n\r\n          parentNative.add(_scope.getNative());\r\n          _scope.parent.children.push(_scope);\r\n\r\n          if (_scope.__params.helpers.box)\r\n            parentNative.add(_helpers.box);\r\n\r\n          if (_scope.__params.helpers.boundingBox)\r\n            parentNative.add(_helpers.boundingBox);\r\n\r\n          if (_scope.__params.helpers.edges)\r\n            parentNative.add(_helpers.edges);\r\n\r\n          if (_scope.__params.helpers.faceNormals)\r\n            parentNative.add(_helpers.faceNormals);\r\n\r\n          if (_scope.__params.helpers.vertexNormals)\r\n            parentNative.add(_helpers.vertexNormals);\r\n        } catch (err) {\r\n          console.error(err.message);\r\n          reject();\r\n        } finally {\r\n          if (_scope._wait) {\r\n            _scope.getNative().addEventListener('ready', () => {\r\n              resolve(_scope);\r\n            });\r\n          } else resolve(_scope);\r\n\r\n          _scope.getNative().addEventListener('collide', () => {\r\n            _scope.emit('ready');\r\n          });\r\n\r\n          if (defaults.debug) {\r\n            console.debug(\r\n                `@WHS.Shape: Shape ${_scope._type} was added to world.`,\r\n                [_scope, _scope.parent]\r\n              );\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize shape's material object.\r\n   */\r\n  _initMaterial(params = {}) {\r\n    return this.physics\r\n      ? loadMaterial(params)._material\r\n      : loadMaterial(params)._materialP;\r\n  }\r\n\r\n  /**\r\n   * Clone shape.\r\n   */\r\n  clone() {\r\n    return new WHS.Shape(this.getParams(), this._type).copy(this);\r\n  }\r\n\r\n  /**\r\n   * Copy shape.\r\n   *\r\n   * @param {WHS.Shape} source - Source object, that will be applied to this.\r\n   */\r\n  copy(source) {\r\n    this.setNative(source.getNative().clone());\r\n\r\n    this.wrap();\r\n\r\n    this.position.copy(source.position);\r\n    this.rotation.copy(source.rotation);\r\n    this.quaternion.copy(source.quaternion);\r\n\r\n    console.log(source.position);\r\n    console.log(this.position);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Remove this shape from world.\r\n   *\r\n   * @return {WHS.Shape} - this.\r\n   */\r\n  remove() {\r\n    this.parent.getScene().remove(this.getNative());\r\n\r\n    this.parent.children.splice(this.parent.children.indexOf(this), 1);\r\n    this.parent = null;\r\n\r\n    this.emit('remove');\r\n\r\n    if (defaults.debug) {\r\n      console.debug(\r\n        `@WHS.Shape: Shape ${this._type} was removed from world`,\r\n        [this]\r\n      );\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @return {WHS.World} - World object.\r\n   */\r\n  getWorld() {\r\n    let p = this.parent;\r\n\r\n    while (!(p instanceof World)) {\r\n      if (p) p = p.parent;\r\n      else return false;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  get position() {\r\n    return this.getNative().position;\r\n  }\r\n\r\n  set position(vector3) {\r\n    const pos = this.getNative().position,\r\n      native = this.getNative();\r\n\r\n    Object.defineProperties(pos, {\r\n      x: {\r\n        get() {\r\n          return this._x;\r\n        },\r\n\r\n        set(x) {\r\n          native.__dirtyPosition = true;\r\n          this._x = x;\r\n        }\r\n      },\r\n      y: {\r\n        get() {\r\n          return this._y;\r\n        },\r\n\r\n        set(y) {\r\n          native.__dirtyPosition = true;\r\n          this._y = y;\r\n        }\r\n      },\r\n      z: {\r\n        get() {\r\n          return this._z;\r\n        },\r\n\r\n        set(z) {\r\n          native.__dirtyPosition = true;\r\n          this._z = z;\r\n        }\r\n      }\r\n    });\r\n\r\n    native.__dirtyPosition = true;\r\n\r\n    return pos.copy(vector3);\r\n  }\r\n\r\n  get quaternion() {\r\n    this.__c_rot = true;\r\n    return this.getNative().quaternion;\r\n  }\r\n\r\n  set quaternion(quaternion) {\r\n    const quat = this.getNative().quaternion,\r\n      native = this.getNative();\r\n\r\n    quat.copy(quaternion);\r\n\r\n    quat.onChange(() => {\r\n      if (this.__c_rot) {\r\n        if (native.__dirtyRotation === true) {\r\n          this.__c_rot = false;\r\n          native.__dirtyRotation = false;\r\n        }\r\n        native.__dirtyRotation = true;\r\n      }\r\n    });\r\n\r\n    return quat;\r\n  }\r\n\r\n  get rotation() {\r\n    this.__c_rot = true;\r\n    return this.getNative().rotation;\r\n  }\r\n\r\n  set rotation(euler) {\r\n    const rot = this.getNative().rotation,\r\n      native = this.getNative();\r\n\r\n    rot.copy(euler);\r\n\r\n    rot.onChange(() => {\r\n      if (this.__c_rot) {\r\n        this.quaternion.copy(new THREE.Quaternion().setFromEuler(rot));\r\n        native.__dirtyRotation = true;\r\n        // this.__c_rot = false;\r\n      }\r\n    });\r\n\r\n    return rot;\r\n  }\r\n\r\n  get scale() {\r\n    return this.getNative().scale;\r\n  }\r\n\r\n  set scale(vector3) {\r\n    this.getNative().scale = vector3;\r\n    return this.getNative().scale;\r\n  }\r\n\r\n  G_(params = {}) {\r\n    if (this.buildGeometry) {\r\n      this.native.geometry = this.buildGeometry(\r\n        this.updateParams({geometry: params})\r\n      );\r\n    }\r\n  }\r\n\r\n  M_(params = {}) {\r\n    this.native.material = this._initMaterial(\r\n      this.updateParams({material: params}).material\r\n    );\r\n  }\r\n\r\n  /* Access private data */\r\n\r\n  setNative(native) {\r\n    this.native = native;\r\n    this.position = this.native.position.clone();\r\n    this.quaternion = this.native.quaternion.clone();\r\n    this.rotation = this.native.rotation.clone();\r\n\r\n    return this.native;\r\n  }\r\n\r\n  getNative() {\r\n    return this.native;\r\n  }\r\n\r\n  setMaterial(material) {\r\n    this.native.material = material;\r\n    return this.native.material;\r\n  }\r\n\r\n  setAngularVelocity(...args) {\r\n    return this.getNative().setAngularVelocity(...args);\r\n  }\r\n\r\n  setLinearVelocity(...args) {\r\n    return this.getNative().setLinearVelocity(...args);\r\n  }\r\n\r\n  follow(curve, time = 1000, loop) {\r\n    const _scope = this,\r\n      gEnd = time;\r\n\r\n    let animation = new Loop(clock => {\r\n      const u = clock.getElapsedTime() * 1000 / gEnd,\r\n        vec1 = curve.getPoint(u % 1),\r\n        vec2 = curve.getPoint((u + 0.01) % 1);\r\n\r\n      _scope.position.set(vec1.x, vec1.y, vec1.z);\r\n      _scope.getNative().lookAt(vec2);\r\n    });\r\n\r\n    _scope.getWorld().addLoop(animation);\r\n\r\n    animation.start();\r\n\r\n    if (loop) {\r\n      setInterval(() => {\r\n        animation.stop();\r\n\r\n        animation = new Loop(clock => {\r\n          const u = clock.getElapsedTime() * 1000 / gEnd,\r\n            vec1 = curve.getPoint(u % 1),\r\n            vec2 = curve.getPoint((u + 0.01) % 1);\r\n\r\n          _scope.position.set(vec1.x, vec1.y, vec1.z);\r\n          _scope.getNative().lookAt(vec2);\r\n        });\r\n\r\n        _scope.getWorld().addLoop(animation);\r\n\r\n        animation.start();\r\n      }, time);\r\n    } else {\r\n      setTimeout(() => {\r\n        animation.stop();\r\n          _scope.getWorld().removeLoop(animation);\r\n      }, time);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Shape\r\n};\r\n"]}