{"version":3,"sources":["core/World.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;IAEM,K;;;;;;;;;;AAOJ,mBAAyB;AAAA;;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,iHACjB;;AAEJ,aAAO,KAFH;AAGJ,kBAAY,KAHR;;AAKJ,iBAAW;AACT,iBAAS,IADA;AAET,cAAM,gBAAM;AAFH,OALP;;AAUJ,eAAS;AACP,cAAM,KADC;AAEP,cAAM;AAFC,OAVL;;AAeJ,eAAS;AACP,WAAG,CADI;AAEP,WAAG,CAFI;AAGP,WAAG;AAHI,OAfL;;AAqBJ,cAAQ;AACN,gBAAQ,EADF;AAEN,cAAM,CAFA;AAGN,aAAK,IAHC;;AAKN,WAAG,CALG;AAMN,WAAG,CANG;AAON,WAAG;AAPG,OArBJ;;AA+BJ,cAAQ,CA/BJ,E;AAgCJ,eAAS,CAhCL,E;;AAkCJ,aAAO,OAAO,UAlCV,E;AAmCJ,cAAQ,OAAO,WAnCX,E;;AAqCJ,eAAS;;AAEP,2BAAmB,CAFZ;AAGP,2BAAmB,KAHZ;;AAKP,gBAAQ;AACN,sBAAY,EADN;AAEN,qBAAW;AAFL,SALD;;AAUP,qBAAa;AACX,oCAA0B,GADf;AAEX,6CAAmC;AAFxB;;AAVN,OArCL;;AAsDJ,kBAAY,QAtDR;AAuDJ,cAAQ,UAvDJ;AAwDJ,iBAAW,SAAS,IAxDhB;;AA0DJ,aAAO;AACL,gBAAQ,2BADH;AAEL,cAAM;AAFD;;AA1DH,KADiB;;AAkEvB,yGAAgB,MAAhB;;AAEA,WAAO,GAAP,QAAiB,EAAjB;;;AAGA,UAAK,UAAL;AACA,UAAK,QAAL;AACA,UAAK,UAAL;AACA,UAAK,WAAL;AACA,UAAK,aAAL;AACA,UAAK,YAAL;;;AAGA,QAAM,aAAN;;AAEA,QAAI,MAAK,SAAL,GAAiB,UAArB,EAAiC;AAC/B,aAAO,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACtC,cAAM,OAAN,CAAc,OAAO,UAArB,EAAiC,OAAO,WAAxC;AACD,OAFD;AAGD;;AAED,UAAM,KAAN,GAAc,EAAd;;AAEA,kBAAO,KAAP;AACD;;;;;;;;;iCAKY;AACX,WAAK,YAAL;;AAEA,UAAM,QAAQ,IAAI,QAAQ,KAAZ,EAAd;;AAEA,YAAM,UAAN,CACE,IAAI,gBAAM,OAAV,CACE,KAAK,SAAL,GAAiB,OAAjB,CAAyB,CAD3B,EAEE,KAAK,SAAL,GAAiB,OAAjB,CAAyB,CAF3B,EAGE,KAAK,SAAL,GAAiB,OAAjB,CAAyB,CAH3B,CADF;;AAQA,WAAK,QAAL,CAAc,KAAd;;;AAGA,WAAK,QAAL,GAAgB,EAAhB;AACD;;;4BAEO,I,EAAM;AACZ,WAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,E;;AAED;;;+BAEU,I,EAAM;AACf,WAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,CAAD;AAAA,eAAO,MAAM,IAAb;AAAA,OAAlB;AACD;;;;;;;;mCAKc;AACb,WAAK,QAAL,GAAgB,IAAhB;;AAEA,cAAQ,OAAR,CAAgB,MAAhB,GAAyB,KAAK,SAAL,GAAiB,KAAjB,CAAuB,MAAhD;AACA,cAAQ,OAAR,CAAgB,IAAhB,GAAuB,KAAK,SAAL,GAAiB,KAAjB,CAAuB,IAA9C;AACD;;;;;;;;+BAKU;AACT,WAAK,SAAL,GAAiB,SAAjB,CAA2B,KAA3B,CAAiC,MAAjC,GAA0C,CAA1C;AACA,WAAK,SAAL,GAAiB,SAAjB,CAA2B,KAA3B,CAAiC,OAAjC,GAA2C,CAA3C;AACA,WAAK,SAAL,GAAiB,SAAjB,CAA2B,KAA3B,CAAiC,QAAjC,GAA4C,UAA5C;AACA,WAAK,SAAL,GAAiB,SAAjB,CAA2B,KAA3B,CAAiC,QAAjC,GAA4C,QAA5C;;AAEA,WAAK,IAAL,GAAY,SAAS,aAAT,CAAuB,KAAvB,CAAZ;AACA,WAAK,IAAL,CAAU,SAAV,GAAsB,KAAtB;;AAEA,WAAK,SAAL,GAAiB,SAAjB,CAA2B,WAA3B,CAAuC,KAAK,IAA5C;;AAEA,aAAO,KAAK,IAAZ;AACD;;;;;;;;iCAKY;;AAEX,UAAI,KAAK,SAAL,GAAiB,KAArB,EAA4B;AAC1B,aAAK,MAAL,GAAc,IAAI,KAAJ,EAAd;;AAEA,YAAI,KAAK,SAAL,GAAiB,KAAjB,KAA2B,KAA/B,EACE,KAAK,MAAL,CAAY,OAAZ,CAAoB,CAApB,EADF,KAGK,IAAI,KAAK,SAAL,GAAiB,KAAjB,KAA2B,IAA/B,EACH,KAAK,MAAL,CAAY,OAAZ,CAAoB,CAApB,EADG,KAGA,IAAI,KAAK,SAAL,GAAiB,KAAjB,KAA2B,IAA/B,EACH,KAAK,MAAL,CAAY,OAAZ,CAAoB,CAApB,EADG,KAGA;AACH,eAAK,MAAL,CAAY,OAAZ,CAAoB,CAApB;AACA,kBAAQ,IAAR,CAAa,CAAC,KAAK,MAAN,CAAb,EAA4B,0CAA5B;AACD;;AAED,aAAK,MAAL,CAAY,UAAZ,CAAuB,KAAvB,CAA6B,QAA7B,GAAwC,UAAxC;AACA,aAAK,MAAL,CAAY,UAAZ,CAAuB,KAAvB,CAA6B,IAA7B,GAAoC,KAApC;AACA,aAAK,MAAL,CAAY,UAAZ,CAAuB,KAAvB,CAA6B,MAA7B,GAAsC,KAAtC;;AAEA,aAAK,IAAL,CAAU,WAAV,CAAsB,KAAK,MAAL,CAAY,UAAlC;AACD;AACF;;;;;;;;kCAKa;AACZ,WAAK,SAAL,CAAe,gCAAsB;AACnC,gBAAQ;AACN,eAAK,KAAK,SAAL,GAAiB,MAAjB,CAAwB,MADvB;AAEN,kBAAQ,KAAK,SAAL,GAAiB,KAAjB,GAAyB,KAAK,SAAL,GAAiB,MAF5C;AAGN,gBAAM,KAAK,SAAL,GAAiB,MAAjB,CAAwB,IAHxB;AAIN,eAAK,KAAK,SAAL,GAAiB,MAAjB,CAAwB;AAJvB,SAD2B;;AAQnC,aAAK;AACH,aAAG,KAAK,SAAL,GAAiB,MAAjB,CAAwB,CADxB;AAEH,aAAG,KAAK,SAAL,GAAiB,MAAjB,CAAwB,CAFxB;AAGH,aAAG,KAAK,SAAL,GAAiB,MAAjB,CAAwB;AAHxB;AAR8B,OAAtB,CAAf;;AAeA,WAAK,SAAL,GAAiB,KAAjB,CAAuB,IAAvB;AACD;;;;;;;;oCAKe;AACd,WAAK,MAAL,GAAc,IAAd;;;AAGA,WAAK,WAAL,CAAiB,IAAI,gBAAM,aAAV,EAAjB;AACA,WAAK,WAAL,GAAmB,aAAnB,CAAiC,KAAK,SAAL,GAAiB,UAAlD;;;AAGA,WAAK,WAAL,GAAmB,SAAnB,CAA6B,OAA7B,GAAuC,KAAK,SAAL,GAAiB,SAAjB,CAA2B,OAAlE;AACA,WAAK,WAAL,GAAmB,SAAnB,CAA6B,IAA7B,GAAoC,KAAK,SAAL,GAAiB,SAAjB,CAA2B,IAA/D;AACA,WAAK,WAAL,GAAmB,SAAnB,CAA6B,OAA7B,GAAuC,IAAvC;;AAEA,WAAK,WAAL,GAAmB,OAAnB,CACQ,OAAO,KAAK,SAAL,GAAiB,KAAjB,GAAyB,KAAK,SAAL,GAAiB,MAAjD,EAAyD,OAAzD,EADR,EAEQ,OAAO,KAAK,SAAL,GAAiB,MAAjB,GAA0B,KAAK,SAAL,GAAiB,OAAlD,EAA2D,OAA3D,EAFR;;AAKA,WAAK,WAAL,GAAmB,MAAnB,CAA0B,KAAK,QAAL,EAA1B,EAA2C,KAAK,SAAL,GAAiB,SAAjB,EAA3C;;AAEA,WAAK,IAAL,CAAU,WAAV,CAAsB,KAAK,WAAL,GAAmB,UAAzC;;AAEA,WAAK,WAAL,GAAmB,UAAnB,CAA8B,KAA9B,CAAoC,KAApC,GAA4C,MAA5C;AACA,WAAK,WAAL,GAAmB,UAAnB,CAA8B,KAA9B,CAAoC,MAApC,GAA6C,MAA7C;AACD;;;;;;;;mCAKc;AACb,UAAI,KAAK,SAAL,GAAiB,OAAjB,CAAyB,IAA7B,EAAmC;AACjC,aAAK,QAAL,GAAgB,GAAhB,CACE,IAAI,gBAAM,UAAV,CACE,KAAK,SAAL,GAAiB,OAAjB,CAAyB,IAAzB,CAA8B,IAA9B,GACE,KAAK,SAAL,GAAiB,OAAjB,CAAyB,IAAzB,CAA8B,IADhC,GAEE,CAHJ,CADF;AAOD;;AAED,UAAI,KAAK,SAAL,GAAiB,OAAjB,CAAyB,IAA7B,EAAmC;AACjC,aAAK,QAAL,GAAgB,GAAhB,CACE,IAAI,gBAAM,UAAV,CACE,KAAK,SAAL,GAAiB,OAAjB,CAAyB,IAAzB,CAA8B,IAA9B,GACE,KAAK,SAAL,GAAiB,OAAjB,CAAyB,IAAzB,CAA8B,IADhC,GAEE,EAHJ,EAIE,KAAK,SAAL,GAAiB,OAAjB,CAAyB,IAAzB,CAA8B,IAA9B,GACE,KAAK,SAAL,GAAiB,OAAjB,CAAyB,IAAzB,CAA8B,IADhC,GAEE,CANJ,CADF;AAUD;AACF;;;;;;;;4BAKO;AACN,UAAM,QAAQ,IAAI,gBAAM,KAAV,EAAd;UACE,QAAQ,IADV;UAEE,QAAQ,MAAM,QAAN,EAFV;UAGE,eAAe,MAAM,SAAN,GAAkB,SAAlB,EAHjB;UAIE,WAAW,MAAM,WAAN,EAJb;;AAMA,aAAO,gBAAP,GAA2B,YAAM;AAC/B,eAAO,OAAO,qBAAP,IACF,OAAO,2BADL,IAEF,OAAO,wBAFL,IAGF,UAAU,QAAV,EAAoB;AACrB,iBAAO,UAAP,CAAkB,QAAlB,EAA4B,OAAO,EAAnC;AACD,SALH;AAMD,OAPyB,EAA1B;;AASA,eAAS,MAAT,CAAgB,IAAhB,EAAsB;AACpB,eAAO,gBAAP,CAAwB,MAAxB;;;AAGA,YAAI,MAAM,MAAV,EAAkB,MAAM,MAAN,CAAa,KAAb;;AAElB,cAAM,QAAN,CAAe,KAAf;;AAEA,YAAI,MAAM,QAAV,EAAoB,MAAM,QAAN;AACpB,YAAI,MAAM,QAAV,EAAoB,MAAM,eAAN;;;AAGpB,YAAI,MAAM,SAAN,IAAmB,MAAM,MAA7B,EAAqC;AACnC,gBAAM,SAAN,CAAgB,KAAhB;AACA,gBAAM,SAAN,CAAgB,MAAhB,CAAuB,KAAvB,EAA8B,YAA9B;AACA,gBAAM,SAAN,CAAgB,IAAhB,CAAqB,MAAM,SAAN,CAAgB,KAArC;AACA,gBAAM,SAAN,CAAgB,QAAhB;AACD,SALD,MAKO,IAAI,MAAM,MAAV,EAAkB,SAAS,MAAT,CAAgB,KAAhB,EAAuB,YAAvB;;AAEzB,cAAM,UAAN,CAAiB,IAAjB;;;AAGA,YAAI,MAAM,MAAV,EAAkB,MAAM,MAAN,CAAa,GAAb;AACnB;;AAED,WAAK,OAAL,GAAe,MAAf;;AAEA,YAAM,OAAN;AACD;;;;;;;;;;+BAOU,I,EAAM;AACf,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,KAAL,CAAW,MAA/B,EAAuC,GAAvC,EAA4C;AAC1C,YAAM,IAAI,KAAK,KAAL,CAAW,CAAX,CAAV;AACA,YAAI,EAAE,OAAN,EAAe,EAAE,OAAF,CAAU,EAAE,KAAZ,EAAmB,IAAnB;AAChB;AACF;;;;;;;;sCAKiB;AAChB,WAAK,QAAL,CAAc,MAAd,CAAqB,KAAK,GAAL,KAAa,KAAK,IAAvC;AACA,WAAK,IAAL,GAAY,KAAK,GAAL,EAAZ;AACD;;;;;;;;;;6BAOQ,K,EAAO;AACd,UAAM,QAAQ,MAAM,QAAN,EAAd;;AAEA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,QAAL,CAAc,MAAlC,EAA0C,GAA1C;AACE,YAAI,KAAK,QAAL,CAAc,CAAd,EAAiB,KAAjB,KAA2B,OAA/B,EAAwC,KAAK,QAAL,CAAc,CAAd,EAAiB,SAAjB,GAA6B,KAA7B,CAAmC,MAAnC,CAA0C,KAA1C;AAD1C;AAED;;;;;;;;8BAK8B;AAAA,UAAvB,KAAuB,yDAAf,CAAe;AAAA,UAAZ,MAAY,yDAAH,CAAG;;AAC7B,WAAK,SAAL,GAAiB,SAAjB,GAA6B,MAA7B,GAAsC,QAAQ,MAA9C;AACA,WAAK,SAAL,GAAiB,SAAjB,GAA6B,sBAA7B;;AAEA,WAAK,WAAL,GAAmB,OAAnB,CACE,OAAO,QAAQ,KAAK,SAAL,GAAiB,MAAhC,EAAwC,OAAxC,EADF,EAEE,OAAO,SAAS,KAAK,SAAL,GAAiB,OAAjC,EAA0C,OAA1C,EAFF;AAID;;;6BAEQ,K,EAAO;AACd,aAAO,GAAP,CAAW,IAAX,EAAiB,KAAjB,GAAyB,KAAzB;AACA,aAAO,OAAO,GAAP,CAAW,IAAX,EAAiB,KAAxB;AACD;;;+BAEU;AACT,aAAO,OAAO,GAAP,CAAW,IAAX,EAAiB,KAAxB;AACD;;;gCAEW,Q,EAAU;AACpB,aAAO,GAAP,CAAW,IAAX,EAAiB,QAAjB,GAA4B,QAA5B;AACA,aAAO,OAAO,GAAP,CAAW,IAAX,EAAiB,QAAxB;AACD;;;kCAEa;AACZ,aAAO,OAAO,GAAP,CAAW,IAAX,EAAiB,QAAxB;AACD;;;;;;;;;;8BAOS,M,EAAQ;AAChB,UAAI,kCAAJ,EACE,OAAO,GAAP,CAAW,IAAX,EAAiB,MAAjB,GAA0B,MAA1B,CADF,KAGE,QAAQ,KAAR,CAAc,sDAAd;AACH;;;gCAEW;AACV,aAAO,OAAO,GAAP,CAAW,IAAX,EAAiB,MAAxB;AACD;;;;;QAIQ,O,GAAT,K","file":"World.js","sourcesContent":["import THREE from 'three';\r\n\r\nimport PerspectiveCamera from '../cameras/PerspectiveCamera';\r\nimport Camera from './Camera';\r\nimport Object from './Object';\r\n\r\nclass World extends Object {\r\n  /**\r\n   * Create a 3D world and define defaults.\r\n   *\r\n   * @param {object} params - The scene settings object.\r\n   * @return {World} A 3D world whs object.\r\n   */\r\n  constructor(params = {}) {\r\n    super({\r\n\r\n      stats: false,\r\n      autoresize: false,\r\n\r\n      shadowmap: {\r\n        enabled: true,\r\n        type: THREE.PCFSoftShadowMap\r\n      },\r\n\r\n      helpers: {\r\n        grid: false,\r\n        axis: false\r\n      },\r\n\r\n      gravity: {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n      },\r\n\r\n      camera: {\r\n        aspect: 75,\r\n        near: 1,\r\n        far: 1000,\r\n\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n      },\r\n\r\n      rWidth: 1, // Resolution(width).\r\n      rHeight: 1, // Resolution(height).\r\n\r\n      width: window.innerWidth, // Container(width).\r\n      height: window.innerHeight, // Container(height).\r\n\r\n      physics: {\r\n\r\n        quatNormalizeSkip: 0,\r\n        quatNormalizeFast: false,\r\n\r\n        solver: {\r\n          iterations: 20,\r\n          tolerance: 0\r\n        },\r\n\r\n        defMaterial: {\r\n          contactEquationStiffness: 1e8,\r\n          contactEquationRegularizationTime: 3\r\n        }\r\n\r\n      },\r\n\r\n      background: 0x000000,\r\n      assets: './assets',\r\n      container: document.body,\r\n\r\n      paths: {\r\n        worker: '../libs/physijs_worker.js',\r\n        ammo: '../libs/ammo.js'\r\n      }\r\n\r\n    });\r\n\r\n    super.setParams(params);\r\n\r\n    native.set(this, {});\r\n\r\n    // INIT.\r\n    this._initScene();\r\n    this._initDOM();\r\n    this._initStats();\r\n    this._initCamera();\r\n    this._initRenderer();\r\n    this._initHelpers();\r\n\r\n    // NOTE: ==================== Autoresize. ======================\r\n    const scope = this;\r\n\r\n    if (this.getParams().autoresize) {\r\n      window.addEventListener('resize', () => {\r\n        scope.setSize(window.innerWidth, window.innerHeight);\r\n      });\r\n    }\r\n\r\n    scope.loops = [];\r\n\r\n    return scope;\r\n  }\r\n\r\n  /**\r\n   * Initialize Three.js scene object.\r\n   */\r\n  _initScene() {\r\n    this._initPhysiJS();\r\n\r\n    const scene = new Physijs.Scene();\r\n\r\n    scene.setGravity(\r\n      new THREE.Vector3(\r\n        this.getParams().gravity.x,\r\n        this.getParams().gravity.y,\r\n        this.getParams().gravity.z\r\n      )\r\n    );\r\n\r\n    this.setScene(scene);\r\n\r\n    // Array for processing.\r\n    this.children = [];\r\n  }\r\n\r\n  addLoop(loop) {\r\n    this.loops.push(loop); // TODO: Process loops on start\r\n    // like: this.loops.forEach((elem) => elem.start());\r\n  }\r\n\r\n  removeLoop(loop) {\r\n    this.loops.filter((l) => l !== loop);\r\n  }\r\n\r\n  /**\r\n   * Set Physi.js scripts pathes.\r\n   */\r\n  _initPhysiJS() {\r\n    this.simulate = true;\r\n\r\n    Physijs.scripts.worker = this.getParams().paths.worker;\r\n    Physijs.scripts.ammo = this.getParams().paths.ammo;\r\n  }\r\n\r\n  /**\r\n   * Initialize DOM structure for whitestorm.\r\n   */\r\n  _initDOM() {\r\n    this.getParams().container.style.margin = 0;\r\n    this.getParams().container.style.padding = 0;\r\n    this.getParams().container.style.position = 'relative';\r\n    this.getParams().container.style.overflow = 'hidden';\r\n\r\n    this._dom = document.createElement('div');\r\n    this._dom.className = 'whs';\r\n\r\n    this.getParams().container.appendChild(this._dom);\r\n\r\n    return this._dom;\r\n  }\r\n\r\n  /**\r\n   * Inititialize stats plugin.\r\n   */\r\n  _initStats() {\r\n    // Debug Renderer\r\n    if (this.getParams().stats) {\r\n      this._stats = new Stats();\r\n\r\n      if (this.getParams().stats === 'fps')\r\n        this._stats.setMode(0);\r\n\r\n      else if (this.getParams().stats === 'ms')\r\n        this._stats.setMode(1);\r\n\r\n      else if (this.getParams().stats === 'mb')\r\n        this._stats.setMode(1);\r\n\r\n      else {\r\n        this._stats.setMode(0);\r\n        console.warn([this._stats], 'Please, apply stats mode [fps, ms, mb] .');\r\n      }\r\n\r\n      this._stats.domElement.style.position = 'absolute';\r\n      this._stats.domElement.style.left = '0px';\r\n      this._stats.domElement.style.bottom = '0px';\r\n\r\n      this._dom.appendChild(this._stats.domElement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a camera and add it to scene.\r\n   */\r\n  _initCamera() {\r\n    this.setCamera(new PerspectiveCamera({\r\n      camera: {\r\n        fov: this.getParams().camera.aspect,\r\n        aspect: this.getParams().width / this.getParams().height,\r\n        near: this.getParams().camera.near,\r\n        far: this.getParams().camera.far\r\n      },\r\n\r\n      pos: {\r\n        x: this.getParams().camera.x,\r\n        y: this.getParams().camera.y,\r\n        z: this.getParams().camera.z\r\n      }\r\n    }));\r\n\r\n    this.getCamera().addTo(this);\r\n  }\r\n\r\n  /**\r\n   * Create a renderer and apply it's options.\r\n   */\r\n  _initRenderer() {\r\n    this.render = true;\r\n\r\n        // Renderer.\r\n    this.setRenderer(new THREE.WebGLRenderer());\r\n    this.getRenderer().setClearColor(this.getParams().background);\r\n\r\n        // Shadowmap.\r\n    this.getRenderer().shadowMap.enabled = this.getParams().shadowmap.enabled;\r\n    this.getRenderer().shadowMap.type = this.getParams().shadowmap.type;\r\n    this.getRenderer().shadowMap.cascade = true;\r\n\r\n    this.getRenderer().setSize(\r\n            Number(this.getParams().width * this.getParams().rWidth).toFixed(),\r\n            Number(this.getParams().height * this.getParams().rHeight).toFixed()\r\n        );\r\n\r\n    this.getRenderer().render(this.getScene(), this.getCamera().getNative());\r\n\r\n    this._dom.appendChild(this.getRenderer().domElement);\r\n\r\n    this.getRenderer().domElement.style.width = '100%';\r\n    this.getRenderer().domElement.style.height = '100%';\r\n  }\r\n\r\n  /**\r\n   * Add helpers to scene.\r\n   */\r\n  _initHelpers() {\r\n    if (this.getParams().helpers.axis) {\r\n      this.getScene().add(\r\n        new THREE.AxisHelper(\r\n          this.getParams().helpers.axis.size\r\n          ? this.getParams().helpers.axis.size\r\n          : 5\r\n        )\r\n      );\r\n    }\r\n\r\n    if (this.getParams().helpers.grid) {\r\n      this.getScene().add(\r\n        new THREE.GridHelper(\r\n          this.getParams().helpers.grid.size\r\n          ? this.getParams().helpers.grid.size\r\n          : 10,\r\n          this.getParams().helpers.grid.step\r\n          ? this.getParams().helpers.grid.step\r\n          : 1\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start animation.\r\n   */\r\n  start() {\r\n    const clock = new THREE.Clock(),\r\n      scope = this,\r\n      scene = scope.getScene(),\r\n      cameraNative = scope.getCamera().getNative(),\r\n      renderer = scope.getRenderer();\r\n\r\n    window.requestAnimFrame = (() => {\r\n      return window.requestAnimationFrame\r\n        || window.webkitRequestAnimationFrame\r\n        || window.mozRequestAnimationFrame\r\n        || function (callback) {\r\n          window.setTimeout(callback, 1000 / 60);\r\n        };\r\n    })();\r\n\r\n    function reDraw(time) {\r\n      window.requestAnimFrame(reDraw);\r\n\r\n      // Init stats.\r\n      if (scope._stats) scope._stats.begin();\r\n\r\n      scope._process(clock);\r\n\r\n      if (scope.simulate) scene.simulate();\r\n      if (scope.controls) scope._updateControls();\r\n\r\n      // Effects rendering.\r\n      if (scope._composer && scope.render) {\r\n        scope._composer.reset();\r\n        scope._composer.render(scene, cameraNative);\r\n        scope._composer.pass(scope._composer.stack);\r\n        scope._composer.toScreen();\r\n      } else if (scope.render) renderer.render(scene, cameraNative);\r\n\r\n      scope._execLoops(time);\r\n\r\n      // End helper.\r\n      if (scope._stats) scope._stats.end();\r\n    }\r\n\r\n    this._update = reDraw;\r\n\r\n    scope._update();\r\n  }\r\n\r\n  /**\r\n   * Execute all loops with a specific time.\r\n   *\r\n   * @params {number} time - The time value that will be passed to loops.\r\n   */\r\n  _execLoops(time) {\r\n    for (let i = 0; i < this.loops.length; i++) {\r\n      const e = this.loops[i];\r\n      if (e.enabled) e.execute(e.clock, time);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update controls time values.\r\n   */\r\n  _updateControls() {\r\n    this.controls.update(Date.now() - this.time);\r\n    this.time = Date.now();\r\n  }\r\n\r\n  /**\r\n   * Update morphs animations.\r\n   *\r\n   * @params {THREE.Clock} clock - The clock object, which.\r\n   */\r\n  _process(clock) {\r\n    const delta = clock.getDelta();\r\n\r\n    for (let i = 0; i < this.children.length; i++)\r\n      if (this.children[i]._type === 'morph') this.children[i].getNative().mixer.update(delta);\r\n  }\r\n\r\n  /**\r\n   * This functon will scene properties when it's called.\r\n   */\r\n  setSize(width = 1, height = 1) {\r\n    this.getCamera().getNative().aspect = width / height;\r\n    this.getCamera().getNative().updateProjectionMatrix();\r\n\r\n    this.getRenderer().setSize(\r\n      Number(width * this.getParams().rWidth).toFixed(),\r\n      Number(height * this.getParams().rHeight).toFixed()\r\n    );\r\n  }\r\n\r\n  setScene(scene) {\r\n    native.get(this).scene = scene;\r\n    return native.get(this).scene;\r\n  }\r\n\r\n  getScene() {\r\n    return native.get(this).scene;\r\n  }\r\n\r\n  setRenderer(renderer) {\r\n    native.get(this).renderer = renderer;\r\n    return native.get(this).renderer;\r\n  }\r\n\r\n  getRenderer() {\r\n    return native.get(this).renderer;\r\n  }\r\n\r\n  /**\r\n   * Set a camera for rendering world.\r\n   *\r\n   * @params {WHS.Camera} camera - The camera to be rendered.\r\n   */\r\n  setCamera(camera) {\r\n    if (camera instanceof Camera)\r\n      native.get(this).camera = camera;\r\n    else\r\n      console.error('@WHS.World: camera in not an instance of WHS.Camera.');\r\n  }\r\n\r\n  getCamera() {\r\n    return native.get(this).camera;\r\n  }\r\n}\r\n\r\nexport {\r\n  World as default\r\n};\r\n\r\n"]}