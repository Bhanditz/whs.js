{"version":3,"sources":["core/World.js"],"names":[],"mappings":"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","file":"World.js","sourcesContent":["import * as THREE from 'three';\nimport Stats from 'stats.js';\nimport * as Physijs from '../physics/index.js';\n\nimport {PerspectiveCamera} from '../cameras/PerspectiveCamera';\nimport {Camera} from './Camera';\nimport {WHSObject} from './Object';\n\nclass World extends WHSObject {\n  /**\n   * Create a 3D world and define defaults.\n   *\n   * @param {object} params - The scene settings object.\n   * @return {World} A 3D world whs object.\n   */\n  constructor(params = {}) {\n    super({\n\n      stats: false,\n      autoresize: false,\n\n      shadowmap: {\n        enabled: true,\n        type: THREE.PCFSoftShadowMap\n      },\n\n      helpers: {\n        grid: false,\n        axis: false\n      },\n\n      gravity: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n\n      camera: {\n        aspect: 75,\n        near: 1,\n        far: 1000,\n\n        x: 0,\n        y: 0,\n        z: 0\n      },\n\n      rWidth: 1, // Resolution(width).\n      rHeight: 1, // Resolution(height).\n\n      width: window.innerWidth, // Container(width).\n      height: window.innerHeight, // Container(height).\n\n      physics: {\n        quatNormalizeSkip: 0,\n        quatNormalizeFast: false,\n\n        solver: {\n          iterations: 20,\n          tolerance: 0\n        },\n\n        defMaterial: {\n          contactEquationStiffness: 1e8,\n          contactEquationRegularizationTime: 3\n        }\n      },\n\n      fog: {\n        type: false,\n\n        density: 0.00025,\n        hex: 0x000000,\n        near: 1,\n        far: 1000\n      },\n\n      background: 0x000000,\n      assets: './assets',\n      container: document.body\n\n    });\n\n    super.setParams(params);\n\n    // INIT.\n    this._initScene();\n    this._initDOM();\n\n    if (!(\n      typeof process === 'object'\n      && Object.prototype.toString.call(process) === '[object process]'\n      )) this._initStats();\n\n    this._initCamera();\n    this._initRenderer();\n    this._initHelpers();\n\n    // NOTE: ==================== Autoresize. ======================\n    const scope = this;\n\n    if (this.getParams().autoresize) {\n      window.addEventListener('resize', () => {\n        scope.setSize(window.innerWidth, window.innerHeight);\n      });\n    }\n\n    scope.loops = [];\n\n    return scope;\n  }\n\n  /**\n   * Initialize THREE.js scene object.\n   */\n  _initScene() {\n    console.log(Physijs);\n    const scene = !!'physics' ? new Physijs.Scene() : new THREE.Scene(),\n      params = this.getParams();\n\n    if (!!'physics') {\n      scene.setGravity(\n        new THREE.Vector3(\n          params.gravity.x,\n          params.gravity.y,\n          params.gravity.z\n        )\n      );\n\n      this.simulate = true;\n    } else this.simulate = false;\n\n    if (params.fog.type === 'regular')\n      scene.fog = new THREE.Fog(params.fog.hex, params.fog.near, params.fog.far);\n    else if (params.fog.type === 'exp'\n      || params.fog.type === 'expodential')\n      scene.fog = new THREE.FogExp2(params.fog.hex, params.fog.density);\n\n    this.setScene(scene);\n\n    // Array for processing.\n    this.children = [];\n  }\n\n  addLoop(loop) {\n    this.loops.push(loop); // TODO: Process loops on start\n    // like: this.loops.forEach((elem) => elem.start());\n  }\n\n  removeLoop(loop) {\n    this.loops.filter((l) => l !== loop);\n  }\n\n  /**\n   * Initialize DOM structure for whitestorm.\n   */\n  _initDOM() {\n    const params = this.getParams();\n\n    params.container.style.margin = 0;\n    params.container.style.padding = 0;\n    params.container.style.position = 'relative';\n    params.container.style.overflow = 'hidden';\n\n    this._dom = document.createElement('div');\n    this._dom.className = 'whs';\n\n    params.container.appendChild(this._dom);\n\n    return this._dom;\n  }\n\n  /**\n   * Inititialize stats plugin.\n   */\n  _initStats() {\n    const params = this.getParams();\n\n    if (params.stats) {\n      this._stats = new Stats();\n\n      if (params.stats === 'fps')\n        this._stats.setMode(0);\n\n      else if (params.stats === 'ms')\n        this._stats.setMode(1);\n\n      else if (params.stats === 'mb')\n        this._stats.setMode(1);\n\n      else {\n        this._stats.setMode(0);\n        console.warn([this._stats], 'Please, apply stats mode [fps, ms, mb] .');\n      }\n\n      this._stats.domElement.style.position = 'absolute';\n      this._stats.domElement.style.left = '0px';\n      this._stats.domElement.style.bottom = '0px';\n\n      this._dom.appendChild(this._stats.domElement);\n    }\n  }\n\n  /**\n   * Create a camera and add it to scene.\n   */\n  _initCamera() {\n    const params = this.getParams();\n\n    this.setCamera(new PerspectiveCamera({\n      camera: {\n        fov: params.camera.aspect,\n        aspect: params.width / params.height,\n        near: params.camera.near,\n        far: params.camera.far\n      },\n\n      pos: {\n        x: params.camera.x,\n        y: params.camera.y,\n        z: params.camera.z\n      }\n    }));\n\n    this.getCamera().addTo(this);\n  }\n\n  /**\n   * Create a renderer and apply it's options.\n   */\n  _initRenderer() {\n    this.render = true;\n\n        // Renderer.\n    this.setRenderer(new THREE.WebGLRenderer());\n\n    const renderer = this.getRenderer();\n    renderer.setClearColor(this.getParams().background);\n\n        // Shadowmap.\n    renderer.shadowMap.enabled = this.getParams().shadowmap.enabled;\n    renderer.shadowMap.type = this.getParams().shadowmap.type;\n    renderer.shadowMap.cascade = true;\n\n    renderer.setSize(\n            Number(this.getParams().width * this.getParams().rWidth).toFixed(),\n            Number(this.getParams().height * this.getParams().rHeight).toFixed()\n        );\n\n    renderer.render(this.getScene(), this.getCamera().getNative());\n\n    this._dom.appendChild(renderer.domElement);\n\n    renderer.domElement.style.width = '100%';\n    renderer.domElement.style.height = '100%';\n  }\n\n  /**\n   * Add helpers to scene.\n   */\n  _initHelpers() {\n    const params = this.getParams(),\n      scene = this.getScene();\n\n    if (params.helpers.axis) {\n      scene.add(\n        new THREE.AxisHelper(\n          params.helpers.axis.size\n          ? params.helpers.axis.size\n          : 5\n        )\n      );\n    }\n\n    if (params.helpers.grid) {\n      scene.add(\n        new THREE.GridHelper(\n          params.helpers.grid.size\n          ? params.helpers.grid.size\n          : 10,\n          params.helpers.grid.step\n          ? params.helpers.grid.step\n          : 1\n        )\n      );\n    }\n  }\n\n  /**\n   * Start animation.\n   */\n  start() {\n    const clock = new THREE.Clock(),\n      _scope = this,\n      scene = _scope.getScene(),\n      cameraNative = _scope.getCamera().getNative(),\n      renderer = _scope.getRenderer();\n\n    window.requestAnimFrame = (() => {\n      return window.requestAnimationFrame\n        || window.webkitRequestAnimationFrame\n        || window.mozRequestAnimationFrame\n        || function (callback) {\n          window.setTimeout(callback, 1000 / 60);\n        };\n    })();\n\n    function reDraw(time) {\n      window.requestAnimFrame(reDraw);\n\n      // Init stats.\n      if (_scope._stats) _scope._stats.begin();\n\n      _scope._process(clock.getDelta());\n\n      if (_scope.simulate) scene.simulate();\n      if (_scope.controls) _scope._updateControls();\n\n      // Effects rendering.\n      if (_scope._composer && _scope.render) {\n        _scope._composer.reset();\n        _scope._composer.render(scene, cameraNative);\n        _scope._composer.pass(_scope._composer.stack);\n        _scope._composer.toScreen();\n      } else if (_scope.render) renderer.render(scene, cameraNative);\n\n      _scope._execLoops(time);\n\n      // End helper.\n      if (_scope._stats) _scope._stats.end();\n    }\n\n    this._update = reDraw;\n\n    _scope._update();\n  }\n\n  /**\n   * Execute all loops with a specific time.\n   *\n   * @params {number} time - The time value that will be passed to loops.\n   */\n  _execLoops(time) {\n    for (let i = 0; i < this.loops.length; i++) {\n      const e = this.loops[i];\n      if (e.enabled) e.execute(e.clock, time);\n    }\n  }\n\n  /**\n   * Update controls time values.\n   */\n  _updateControls() {\n    this.controls.update(Date.now() - this.time);\n    this.time = Date.now();\n  }\n\n  /**\n   * Update morphs animations.\n   *\n   * @params {THREE.Clock} clock - The clock object, which.\n   */\n  _process(delta) {\n    for (let i = 0; i < this.children.length; i++)\n      if (this.children[i]._type === 'morph') this.children[i].getNative().mixer.update(delta);\n  }\n\n  /**\n   * This functon will scene properties when it's called.\n   */\n  setSize(width = 1, height = 1) {\n    this.getCamera().getNative().aspect = width / height;\n    this.getCamera().getNative().updateProjectionMatrix();\n\n    this.getRenderer().setSize(\n      Number(width * this.getParams().rWidth).toFixed(),\n      Number(height * this.getParams().rHeight).toFixed()\n    );\n  }\n\n  setScene(scene) {\n    this.scene = scene;\n    return this.scene;\n  }\n\n  getScene() {\n    return this.scene;\n  }\n\n  setRenderer(renderer) {\n    this.renderer = renderer;\n    return this.renderer;\n  }\n\n  getRenderer() {\n    return this.renderer;\n  }\n\n  setControls(controls) {\n    const recieved = controls(this);\n\n    this.controls = recieved instanceof Array ? recieved[0] : recieved;\n\n    if (\n      recieved instanceof Array\n      && typeof recieved[1] === 'function'\n    ) recieved[1](this);\n\n    return this.controls;\n  }\n\n  /**\n   * Set a camera for rendering world.\n   *\n   * @params {WHS.Camera} camera - The camera to be rendered.\n   */\n  setCamera(camera) {\n    if (camera instanceof Camera)\n      this.camera = camera;\n    else\n      console.error('@WHS.World: camera in not an instance of WHS.Camera.');\n  }\n\n  getCamera() {\n    return this.camera;\n  }\n}\n\nexport {\n  World\n};\n\n"]}