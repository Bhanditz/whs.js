{"version":3,"sources":["lights/NormalLight.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAEM,W;;;;;;;;;AAMJ,yBAAyB;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,qHACjB,MADiB,EACT,aADS;;AAGvB,UAAK,KAAL,CAAW,MAAX;;AAEA;AACA;AANuB;AAOxB;;;;4BAEkB;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACjB,UAAM,SAAS,IAAf;;AAEA,aAAO,sBAAY,UAAC,OAAD,EAAa;AAC9B,eAAO,SAAP,CAAiB,IAAI,MAAM,KAAV,CACf,OAAO,KAAP,CAAa,KADE,CAAjB;;AAIA;AACD,OANM,CAAP;AAOD;;;;;QAID,W,GAAA,W","file":"NormalLight.js","sourcesContent":["import {Light} from '../core/Light';\n\nclass NormalLight extends Light {\n  /**\n   * Normal light.\n   *\n   * @param {Object} params.light.color - Light color.\n   */\n  constructor(params = {}) {\n    super(params, 'normallight');\n\n    this.build(params);\n\n    super.wrap();\n    super.wrapShadow();\n  }\n\n  build(params = {}) {\n    const _scope = this;\n\n    return new Promise((resolve) => {\n      _scope.setNative(new THREE.Light(\n        params.light.color\n      ));\n\n      resolve();\n    });\n  }\n}\n\nexport {\n  NormalLight\n};\n"]}