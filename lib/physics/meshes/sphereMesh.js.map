{"version":3,"sources":["physics/meshes/sphereMesh.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;IAEa,U,WAAA,U;;;AACX,sBAAY,QAAZ,EAAsB,QAAtB,EAA6C;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,4GACrC,QADqC,EAC3B,QAD2B,EACjB,OAAO,IADU;;AAG3C,QAAI,CAAC,SAAS,cAAd,EAA8B,SAAS,qBAAT;;AAE9B,UAAK,QAAL,CAAc,IAAd,GAAqB,QAArB;AACA,UAAK,QAAL,CAAc,MAAd,GAAuB,SAAS,cAAT,CAAwB,MAA/C;AACA,UAAK,QAAL,CAAc,IAAd,GAAsB,OAAO,OAAO,IAAd,KAAuB,WAAxB,GAAwC,IAAI,CAAL,GAAU,KAAK,EAAf,GAAoB,KAAK,GAAL,CAAS,MAAK,QAAL,CAAc,MAAvB,EAA+B,CAA/B,CAA3D,GAA+F,OAAO,IAA3H;AAP2C;AAQ5C","file":"sphereMesh.js","sourcesContent":["import {Mesh} from '../core/mesh';\r\n\r\nexport class SphereMesh extends Mesh {\r\n  constructor(geometry, material, params = {}) {\r\n    super(geometry, material, params.mass);\r\n\r\n    if (!geometry.boundingSphere) geometry.computeBoundingSphere();\r\n\r\n    this._physijs.type = 'sphere';\r\n    this._physijs.radius = geometry.boundingSphere.radius;\r\n    this._physijs.mass = (typeof params.mass === 'undefined') ? (4 / 3) * Math.PI * Math.pow(this._physijs.radius, 3) : params.mass;\r\n  }\r\n}\r\n"]}