{"version":3,"sources":["physics/meshes/sphereMesh.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;IAEa,U,WAAA,U;;;AACX,sBAAY,QAAZ,EAAsB,QAAtB,EAAgC,IAAhC,EAAsC;AAAA;;AAAA,4GAC9B,QAD8B,EACpB,QADoB,EACV,IADU;;AAGpC,QAAI,CAAC,SAAS,cAAd,EAA8B,SAAS,qBAAT;;AAE9B,UAAK,QAAL,CAAc,IAAd,GAAqB,QAArB;AACA,UAAK,QAAL,CAAc,MAAd,GAAuB,SAAS,cAAT,CAAwB,MAA/C;AACA,UAAK,QAAL,CAAc,IAAd,GAAsB,OAAO,IAAP,KAAgB,WAAjB,GAAiC,IAAI,CAAL,GAAU,KAAK,EAAf,GAAoB,KAAK,GAAL,CAAS,MAAK,QAAL,CAAc,MAAvB,EAA+B,CAA/B,CAApD,GAAwF,IAA7G;AAPoC;AAQrC","file":"sphereMesh.js","sourcesContent":["import {Mesh} from '../core/mesh';\n\nexport class SphereMesh extends Mesh {\n  constructor(geometry, material, mass) {\n    super(geometry, material, mass);\n\n    if (!geometry.boundingSphere) geometry.computeBoundingSphere();\n\n    this._physijs.type = 'sphere';\n    this._physijs.radius = geometry.boundingSphere.radius;\n    this._physijs.mass = (typeof mass === 'undefined') ? (4 / 3) * Math.PI * Math.pow(this._physijs.radius, 3) : mass;\n  }\n}\n"]}