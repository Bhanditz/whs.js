{"version":3,"sources":["physics/core/mesh.js"],"names":[],"mappings":"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","file":"mesh.js","sourcesContent":["import * as THREE from 'three';\nimport {Eventable} from '../eventable';\nimport {getObjectId} from '../api';\n\nexport class Mesh extends THREE.Mesh {\n  constructor(geometry, material, mass) {\n    if (!geometry) return;\n\n    super(geometry, material);\n    Object.assign(this, new Eventable());\n    Eventable.make(Mesh);\n\n    if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n    this._physijs = {\n      type: null,\n      id: getObjectId(),\n      mass: mass || 0,\n      touches: [],\n      linearVelocity: new THREE.Vector3(),\n      angularVelocity: new THREE.Vector3()\n    };\n  }\n\n  get mass() {\n    return this._physijs.mass;\n  }\n\n  set mass(mass) {\n    this._physijs.mass = mass;\n    if (this.world) this.world.execute('updateMass', {id: this._physijs.id, mass});\n  }\n\n  applyCentralImpulse(force) {\n    if (this.world) this.world.execute('applyCentralImpulse', {id: this._physijs.id, x: force.x, y: force.y, z: force.z});\n  }\n\n  applyImpulse(force, offset) {\n    if (this.world) {\n      this.world.execute('applyImpulse', {\n        id: this._physijs.id,\n        impulse_x: force.x,\n        impulse_y: force.y,\n        impulse_z: force.z,\n        x: offset.x,\n        y: offset.y,\n        z: offset.z\n      });\n    }\n  }\n\n  applyTorque(force) {\n    if (this.world) {\n      this.world.execute('applyTorque', {\n        id: this._physijs.id,\n        torque_x: force.x,\n        torque_y: force.y,\n        torque_z: force.z\n      });\n    }\n  }\n\n  applyCentralForce(force) {\n    if (this.world) this.world.execute('applyCentralForce', {id: this._physijs.id, x: force.x, y: force.y, z: force.z});\n  }\n\n  applyForce(force, offset) {\n    if (this.world) {\n      this.world.execute('applyForce', {\n        id: this._physijs.id,\n        force_x: force.x,\n        force_y: force.y,\n        force_z: force.z,\n        x: offset.x,\n        y: offset.y,\n        z: offset.z\n      });\n    }\n  }\n\n  getAngularVelocity() {\n    return this._physijs.angularVelocity;\n  }\n\n  setAngularVelocity(velocity) {\n    if (this.world) this.world.execute('setAngularVelocity', {id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z});\n  }\n\n  getLinearVelocity() {\n    return this._physijs.linearVelocity;\n  }\n\n  setLinearVelocity(velocity) {\n    if (this.world) this.world.execute('setLinearVelocity', {id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z});\n  }\n\n  setAngularFactor(factor) {\n    if (this.world) this.world.execute('setAngularFactor', {id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z});\n  }\n\n  setLinearFactor(factor) {\n    if (this.world) this.world.execute('setLinearFactor', {id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z});\n  }\n\n  setDamping(linear, angular) {\n    if (this.world) this.world.execute('setDamping', {id: this._physijs.id, linear, angular});\n  }\n\n  setCcdMotionThreshold(threshold) {\n    if (this.world) this.world.execute('setCcdMotionThreshold', {id: this._physijs.id, threshold});\n  }\n\n  setCcdSweptSphereRadius(radius) {\n    if (this.world) this.world.execute('setCcdSweptSphereRadius', {id: this._physijs.id, radius});\n  }\n}\n"]}