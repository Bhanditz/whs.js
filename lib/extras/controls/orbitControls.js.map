{"version":3,"sources":["extras/controls/orbitControls.js"],"names":[],"mappings":";;;;;;;;;;QAGgB,a,GAAA,a;;AAHhB;;IAAY,K;;AACZ;;;;;;;;AAEO,SAAS,aAAT,CAAuB,MAAvB,EAA+B;AACpC,MAAM,WAAW,iCACf,KAAK,SAAL,GAAiB,SAAjB,EADe,EAEf,KAAK,WAAL,GAAmB,UAFJ,CAAjB;;AAKA,MAAI,UAAU,OAAO,WAArB,EAAkC;AAChC,QAAM,UAAS,SAAS,OAAO,IAAP,CAAY,QAArB,GACX,IAAI,MAAM,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CADJ;;AAGA,aAAS,MAAT,GAAkB,OAAlB;AACD,GALD,MAKO,IAAI,QAAO,MAAP,uDAAO,MAAP,OAAkB,QAAtB,EACL,SAAS,MAAT,CAAgB,IAAhB,CAAqB,MAArB,EADK,KAGL,QAAQ,KAAR,CAAc,kDAAd;;AAEF,SAAO,QAAP;AACD","file":"orbitControls.js","sourcesContent":["import * as THREE from 'three';\nimport ThreeOrbitControls from 'three-orbit-controls';\n\nexport function OrbitControls(object) {\n  const controls = new ThreeOrbitControls(\n    this.getCamera().getNative(),\n    this.getRenderer().domElement\n  );\n\n  if (object && object.__whsobject) {\n    const target = object ? object.mesh.position\n      : new THREE.Vector3(0, 0, 0);\n\n    controls.target = target;\n  } else if (typeof object === 'object')\n    controls.target.copy(target);\n  else\n    console.error('Object must be a THREE.JS vector! @OrbitControls');\n\n  return controls;\n}\n"]}