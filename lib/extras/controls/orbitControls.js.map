{"version":3,"sources":["extras/controls/orbitControls.js"],"names":[],"mappings":";;;;;;;;;;QAKgB,a,GAAA,a;;AALhB;;IAAY,K;;AACZ;;;;;;;;AAEA,IAAM,qBAAqB,kCAAiB,KAAjB,CAA3B;;AAEO,SAAS,aAAT,CAAuB,MAAvB,EAA+B;AACpC,SAAO,UAAU,KAAV,EAAiB;AACtB,QAAM,WAAW,IAAI,kBAAJ,CACf,MAAM,SAAN,GAAkB,SAAlB,EADe,EAEf,MAAM,WAAN,GAAoB,UAFL,CAAjB;;AAKA,QAAI,UAAU,OAAO,WAArB,EAAkC;AAChC,UAAM,UAAS,SAAS,OAAO,IAAP,CAAY,QAArB,GACX,IAAI,MAAM,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CADJ;;AAGA,eAAS,MAAT,GAAkB,OAAlB;AACD,KALD,MAKO,IAAI,QAAO,MAAP,uDAAO,MAAP,OAAkB,QAAtB,EACL,SAAS,MAAT,CAAgB,IAAhB,CAAqB,MAArB;;AAEF,WAAO,QAAP;AACD,GAfD;AAgBD","file":"orbitControls.js","sourcesContent":["import * as THREE from 'three';\nimport getOrbitControls from 'three-orbit-controls';\n\nconst ThreeOrbitControls = getOrbitControls(THREE);\n\nexport function orbitControls(object) {\n  return function (world) {\n    const controls = new ThreeOrbitControls(\n      world.getCamera().getNative(),\n      world.getRenderer().domElement\n    );\n\n    if (object && object.__whsobject) {\n      const target = object ? object.mesh.position\n        : new THREE.Vector3(0, 0, 0);\n\n      controls.target = target;\n    } else if (typeof object === 'object')\n      controls.target.copy(target);\n\n    return controls;\n  };\n}\n"]}