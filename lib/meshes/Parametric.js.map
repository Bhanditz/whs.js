{"version":3,"sources":["meshes/Parametric.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;IAAY,K;;AACZ;;;;AAEA;;AACA;;;;;;IAEM,U;;;AACJ,wBAAyB;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,oHACjB,MADiB,EACT,YADS;;AAGvB,qBAAO,OAAO,QAAd,EAAwB;AAEtB,UAFsB,kBAEf,CAAE,CAFa;;AAGtB,cAAQ,EAHc;AAItB,cAAQ;;AAJc,KAAxB;;AAQA,UAAK,KAAL,CAAW,MAAX;;AAEA;AAbuB;AAcxB;;;;4BAEkB;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACjB,UAAM,SAAS,IAAf;UACE,OAAO,KAAK,OAAL,GAAe,gBAAQ,WAAvB,GAAqC,MAAM,IADpD;UAEE,qHAA+B,OAAO,QAAtC,CAFF;;AAIA,aAAO,sBAAY,UAAC,OAAD,EAAa;AAC9B,eAAO,SAAP,CAAiB,IAAI,IAAJ,CACf,IAAI,MAAM,kBAAV,CAEE,OAAO,QAAP,CAAgB,IAFlB,EAGE,OAAO,QAAP,CAAgB,MAHlB,EAIE,OAAO,QAAP,CAAgB,MAJlB,CADe,EASf,QATe,EAUf,OAAO,IAVQ,CAAjB;;AAaA;AACD,OAfM,CAAP;AAgBD;;;;;;;;4BAKO;AACN,aAAO,IAAI,UAAJ,CAAe,KAAK,SAAL,EAAf,EAAiC,KAAK,KAAtC,EAA6C,IAA7C,CAAkD,IAAlD,CAAP;AACD;;;;;QAID,U,GAAA,U","file":"Parametric.js","sourcesContent":["import * as THREE from 'three';\nimport Physijs  from '../physics/physi.js';\n\nimport {Shape} from '../core/Shape';\nimport {extend} from '../extras/api';\n\nclass Parametric extends Shape {\n  constructor(params = {}) {\n    super(params, 'parametric');\n\n    extend(params.geometry, {\n\n      func() {},\n      slices: 10,\n      stacks: 10\n\n    });\n\n    this.build(params);\n\n    super.wrap();\n  }\n\n  build(params = {}) {\n    const _scope = this,\n      Mesh = this.physics ? Physijs.ConcaveMesh : THREE.Mesh,\n      material = super._initMaterial(params.material);\n\n    return new Promise((resolve) => {\n      _scope.setNative(new Mesh(\n        new THREE.ParametricGeometry(\n\n          params.geometry.func,\n          params.geometry.slices,\n          params.geometry.stacks\n\n        ),\n\n        material,\n        params.mass\n      ));\n\n      resolve();\n    });\n  }\n\n  /**\n   * Clone parametric.\n   */\n  clone() {\n    return new Parametric(this.getParams(), this._type).copy(this);\n  }\n}\n\nexport {\n  Parametric\n};\n"]}