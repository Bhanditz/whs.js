{"version":3,"sources":["meshes/Tube.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;IAAY,K;;AACZ;;;;AAEA;;AACA;;;;;;IAEM,I;;;AACJ,kBAAyB;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,8GACjB,MADiB,EACT,MADS;;AAGvB,qBAAO,OAAO,QAAd,EAAwB;;AAEtB,YAAM,QAAQ,eAAR,CAAwB,IAAxB,GAA+B,IAAI,MAAK,cAAT,CAAwB,GAAxB,CAA/B,GAA8D,KAF9C;AAGtB,gBAAU,EAHY;AAItB,cAAQ,CAJc;AAKtB,sBAAgB,CALM;AAMtB,cAAQ;;AANc,KAAxB;;AAUA,UAAK,KAAL,CAAW,MAAX;;AAEA;AAfuB;AAgBxB;;;;4BAEkB;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACjB,UAAM,SAAS,IAAf;UACE,OAAO,KAAK,OAAL,GAAe,gBAAQ,UAAvB,GAAoC,MAAM,IADnD;UAEE,+GAA+B,OAAO,QAAtC,CAFF;;AAIA,aAAO,sBAAY,UAAC,OAAD,EAAa;AAC9B,eAAO,SAAP,CAAiB,IAAI,IAAJ,CACf,IAAI,MAAM,YAAV,CAEE,OAAO,QAAP,CAAgB,IAFlB,EAGE,OAAO,QAAP,CAAgB,QAHlB,EAIE,OAAO,QAAP,CAAgB,MAJlB,EAKE,OAAO,QAAP,CAAgB,cALlB,EAME,OAAO,QAAP,CAAgB,MANlB,CADe,EAWf,QAXe,EAYf,OAAO,IAZQ,CAAjB;;AAeA;AACD,OAjBM,CAAP;AAkBD;;;;;;;;4BAuBO;AACN,aAAO,IAAI,IAAJ,CAAS,KAAK,SAAL,EAAT,EAA2B,KAAK,KAAhC,EAAuC,IAAvC,CAA4C,IAA5C,CAAP;AACD;;;wBAvBoB;AAAA;;AACnB,aAAO,MAAM,KAAN,CAAY,MAAZ,CAEL,UAAC,KAAD,EAAW;;AACT,eAAK,KAAL,GAAa,SAAS,CAAtB;AACD,OAJI,EAML,UAAC,CAAD,EAAO;;AACL,YAAM,KAAK,IAAI,CAAJ,GAAQ,GAAnB;YACE,KAAK,KAAK,GAAL,CAAS,IAAI,KAAK,EAAT,GAAc,CAAvB,CADP;YAEE,KAAK,CAFP;;AAIA,eAAO,IAAI,MAAM,OAAV,CAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,cAA9B,CAA6C,OAAK,KAAlD,CAAP;AACD,OAZI,CAAP;AAeD;;;;;QAWD,I,GAAA,I","file":"Tube.js","sourcesContent":["import * as THREE from 'three';\r\nimport Physijs  from '../physics/physi.js';\r\n\r\nimport {Shape} from '../core/Shape';\r\nimport {extend} from '../extras/api';\r\n\r\nclass Tube extends Shape {\r\n  constructor(params = {}) {\r\n    super(params, 'tube');\r\n\r\n    extend(params.geometry, {\r\n\r\n      path: options.geometryOptions.path ? new this.CustomSinCurve(100) : false,\r\n      segments: 20,\r\n      radius: 2,\r\n      radiusSegments: 8,\r\n      closed: false\r\n\r\n    });\r\n\r\n    this.build(params);\r\n\r\n    super.wrap();\r\n  }\r\n\r\n  build(params = {}) {\r\n    const _scope = this,\r\n      Mesh = this.physics ? Physijs.ConvexMesh : THREE.Mesh,\r\n      material = super._initMaterial(params.material);\r\n\r\n    return new Promise((resolve) => {\r\n      _scope.setNative(new Mesh(\r\n        new THREE.TubeGeometry(\r\n\r\n          params.geometry.path,\r\n          params.geometry.segments,\r\n          params.geometry.radius,\r\n          params.geometry.radiusSegments,\r\n          params.geometry.closed\r\n\r\n        ),\r\n\r\n        material,\r\n        params.mass\r\n      ));\r\n\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  get CustomSinCurve() {\r\n    return THREE.Curve.create(\r\n\r\n      (scale) => { // custom curve constructor\r\n        this.scale = scale || 1;\r\n      },\r\n\r\n      (t) => { // getPoint: t is between 0-1\r\n        const tx = t * 3 - 1.5,\r\n          ty = Math.sin(2 * Math.PI * t),\r\n          tz = 0;\r\n\r\n        return new THREE.Vector3(tx, ty, tz).multiplyScalar(this.scale);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clone tube.\r\n   */\r\n  clone() {\r\n    return new Tube(this.getParams(), this._type).copy(this);\r\n  }\r\n}\r\n\r\nexport {\r\n  Tube\r\n};\r\n"]}