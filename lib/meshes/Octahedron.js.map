{"version":3,"sources":["meshes/Octahedron.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;IAEM,U;;;AACJ,wBAAyB;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,oHACjB,MADiB,EACT,YADS;;AAGvB,qBAAO,OAAO,QAAd,EAAwB;;AAEtB,cAAQ,CAFc;AAGtB,cAAQ;;AAHc,KAAxB;;AAOA,UAAK,KAAL,CAAW,MAAX;AACA;AAXuB;AAYxB;;;;4BAEkB;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACjB,UAAM,SAAS,IAAf;UACE,OAAO,KAAK,OAAL,GAAe,8BAAQ,UAAvB,GAAoC,gBAAM,IADnD;UAEE,qHAA+B,OAAO,QAAtC,CAFF;;AAIA,aAAO,sBAAY,UAAC,OAAD,EAAa;AAC9B,eAAO,SAAP,CAAiB,IAAI,IAAJ,CACf,IAAI,gBAAM,kBAAV,CACE,OAAO,QAAP,CAAgB,MADlB,EAEE,OAAO,QAAP,CAAgB,MAFlB,CADe,EAMf,QANe,EAOf,OAAO,IAPQ,CAAjB;;AAUA;AACD,OAZM,CAAP;AAaD;;;4BAEO;AACN,aAAO,IAAI,UAAJ,CAAe,KAAK,SAAL,EAAf,EAAiC,KAAK,KAAtC,EAA6C,IAA7C,CAAkD,IAAlD,CAAP;AACD;;;;;QAIa,O,GAAd,U","file":"Octahedron.js","sourcesContent":["import THREE from 'three';\nimport Physijs from 'whitestormjs-physijs';\n\nimport Shape from '../core/Shape';\nimport {extend} from '../extras/api';\n\nclass Octahedron extends Shape {\n  constructor(params = {}) {\n    super(params, 'octahedron');\n\n    extend(params.geometry, {\n\n      radius: 1,\n      detail: 0\n\n    });\n\n    this.build(params);\n    super.wrap();\n  }\n\n  build(params = {}) {\n    const _scope = this,\n      Mesh = this.physics ? Physijs.ConvexMesh : THREE.Mesh,\n      material = super._initMaterial(params.material);\n\n    return new Promise((resolve) => {\n      _scope.setNative(new Mesh(\n        new THREE.OctahedronGeometry(\n          params.geometry.radius,\n          params.geometry.detail\n        ),\n\n        material,\n        params.mass\n      ));\n\n      resolve();\n    });\n  }\n\n  clone() {\n    return new Octahedron(this.getParams(), this._type).copy(this);\n  }\n}\n\nexport {\n  Octahedron as default\n};\n"]}