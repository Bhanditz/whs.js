{"version":3,"sources":["meshes/Shape2D.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;IAEM,O;;;AACJ,qBAAyB;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,iHACjB,MADiB,EACT,SADS;;AAGvB,qBAAO,OAAO,QAAd,EAAwB;AACtB,cAAQ;AADc,KAAxB;;AAIA,qGAAY,MAAZ;AACA,oGAAW,SAAX;AARuB;AASxB;;;;4BAEkB;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACjB,UAAM,SAAS,IAAf;UACE,kHAA+B,OAAO,QAAtC,CADF;;AAGA,aAAO,sBAAY,UAAC,OAAD,EAAa;AAC9B,eAAO,SAAP,CAAiB,IAAI,gBAAM,IAAV,CACf,IAAI,gBAAM,aAAV,CACE,OAAO,QAAP,CAAgB,MADlB,CADe,EAKf,QALe,CAAjB;;AAQA;AACD,OAVM,CAAP;AAWD;;;4BAEO;AACN,aAAO,IAAI,OAAJ,CAAY,KAAK,SAAL,EAAZ,EAA8B,KAAK,KAAnC,EAA0C,IAA1C,CAA+C,IAA/C,CAAP;AACD;;;;;QAIU,O,GAAX,O","file":"Shape2D.js","sourcesContent":["import THREE from 'three';\n\nimport Shape from '../core/Shape';\nimport {extend} from '../extras/api';\n\nclass Shape2D extends Shape {\n  constructor(params = {}) {\n    super(params, 'shape2D');\n\n    extend(params.geometry, {\n      shapes: []\n    });\n\n    super.build(params);\n    super.wrap('onlyvis');\n  }\n\n  build(params = {}) {\n    const _scope = this,\n      material = super._initMaterial(params.material);\n\n    return new Promise((resolve) => {\n      _scope.setNative(new THREE.Mesh(\n        new THREE.ShapeGeometry(\n          params.geometry.shapes\n        ),\n\n        material\n      ));\n\n      resolve();\n    });\n  }\n\n  clone() {\n    return new Shape2D(this.getParams(), this._type).copy(this);\n  }\n}\n\nexport {\n  Shape2D as default\n};\n"]}