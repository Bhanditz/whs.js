{"version":3,"sources":["meshes/Ring.js"],"names":[],"mappings":"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","file":"Ring.js","sourcesContent":["import * as THREE from 'three';\n\nimport {Shape} from '../core/Shape';\nimport {extend} from '../extras/api';\n\nclass Ring extends Shape {\n  constructor(params = {}) {\n    super(params, 'ring');\n\n    extend(params.geometry, {\n      innerRadius: 0,\n      outerRadius: 50,\n      thetaSegments: 8,\n      phiSegments: 8,\n      thetaStart: 0,\n      thetaLength: Math.PI * 2\n    });\n\n    if (params.build) {\n      this.build(params);\n      super.wrap('onlyvis');\n    }\n  }\n\n  build(params = {}) {\n    const _scope = this,\n      material = super._initMaterial(params.material);\n\n    return new Promise((resolve) => {\n      _scope.setNative(new THREE.Mesh(\n        new THREE.RingGeometry(\n          params.geometry.innerRadius,\n          params.geometry.outerRadius,\n          params.geometry.thetaSegments,\n          params.geometry.phiSegments,\n          params.geometry.thetaStart,\n          params.geometry.thetaLength\n        ),\n\n        material\n      ));\n\n      resolve();\n    });\n  }\n\n  buildGeometry(params = {}) {\n    return new THREE.RingGeometry(\n      params.geometry.innerRadius,\n      params.geometry.outerRadius,\n      params.geometry.thetaSegments,\n      params.geometry.phiSegments,\n      params.geometry.thetaStart,\n      params.geometry.thetaLength\n    );\n  }\n\n  set G_innerRadius(val) {\n    this.native.geometry = this.buildGeometry(this.updateParams({geometry: {innerRadius: val}}));\n  }\n\n  get G_innerRadius() {\n    return this.native.geometry.parameters.innerRadius;\n  }\n\n  set G_outerRadius(val) {\n    this.native.geometry = this.buildGeometry(this.updateParams({geometry: {outerRadius: val}}));\n  }\n\n  get G_outerRadius() {\n    return this.native.geometry.parameters.outerRadius;\n  }\n\n  set G_thetaSegments(val) {\n    this.native.geometry = this.buildGeometry(this.updateParams({geometry: {thetaSegments: val}}));\n  }\n\n  get G_thetaSegments() {\n    return this.native.geometry.parameters.thetaSegments;\n  }\n\n  set G_phiSegments(val) {\n    this.native.geometry = this.buildGeometry(this.updateParams({geometry: {phiSegments: val}}));\n  }\n\n  get G_phiSegments() {\n    return this.native.geometry.parameters.phiSegments;\n  }\n\n  set G_thetaStart(val) {\n    this.native.geometry = this.buildGeometry(this.updateParams({geometry: {thetaStart: val}}));\n  }\n\n  get G_thetaStart() {\n    return this.native.geometry.parameters.thetaStart;\n  }\n\n  set G_thetaLength(val) {\n    this.native.geometry = this.buildGeometry(this.updateParams({geometry: {thetaLength: val}}));\n  }\n\n  get G_thetaLength() {\n    return this.native.geometry.parameters.thetaLength;\n  }\n\n  clone() {\n    return new Ring({build: false}).copy(this);\n  }\n}\n\nexport {\n  Ring\n};\n"]}