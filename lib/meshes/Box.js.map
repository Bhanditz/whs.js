{"version":3,"sources":["meshes/Box.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;IAAY,K;;AACZ;;IAAY,O;;AAEZ;;AACA;;;;;;IAEM,G;;;AACJ,iBAAyB;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,qGACjB,MADiB,EACT,KADS;;AAGvB,qBAAO,OAAO,QAAd,EAAwB;AACtB,aAAO,CADe;AAEtB,cAAQ,CAFc;AAGtB,aAAO;AAHe,KAAxB;;AAMA,QAAI,OAAO,KAAX,EAAkB;AAChB,YAAK,KAAL,CAAW,MAAX;AACA;AACD;AAZsB;AAaxB;;;;4BAEkB;AAAA;;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACjB,UAAM,OAAO,KAAK,OAAL,GAAe,QAAQ,OAAvB,GAAiC,MAAM,IAApD;AACA,UAAM,sGAA+B,OAAO,QAAtC,CAAN;;AAEA,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAa;AAC9B,eAAK,SAAL,CAAe,IAAI,IAAJ,CACb,OAAK,aAAL,CAAmB,MAAnB,CADa,EAEb,QAFa,EAGb,OAAO,IAHM,CAAf;;AAMA;AACD,OARM,CAAP;AASD;;;oCAE0B;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACzB,aAAO,IAAI,MAAM,WAAV,CACL,OAAO,QAAP,CAAgB,KADX,EAEL,OAAO,QAAP,CAAgB,MAFX,EAGL,OAAO,QAAP,CAAgB,KAHX,CAAP;AAKD;;;4BA0BO;AACN,aAAO,IAAI,GAAJ,CAAQ,EAAC,OAAO,KAAR,EAAR,EAAwB,IAAxB,CAA6B,IAA7B,CAAP;AACD;;;sBA1BW,G,EAAK;AACf,WAAK,MAAL,CAAY,QAAZ,GAAuB,KAAK,aAAL,CAAmB,KAAK,YAAL,CAAkB,EAAC,UAAU,EAAC,OAAO,GAAR,EAAX,EAAlB,CAAnB,CAAvB;AACD,K;wBAEa;AACZ,aAAO,KAAK,MAAL,CAAY,QAAZ,CAAqB,UAArB,CAAgC,KAAvC;AACD;;;sBAEY,G,EAAK;AAChB,WAAK,MAAL,CAAY,QAAZ,GAAuB,KAAK,aAAL,CAAmB,KAAK,YAAL,CAAkB,EAAC,UAAU,EAAC,QAAQ,GAAT,EAAX,EAAlB,CAAnB,CAAvB;AACD,K;wBAEc;AACb,aAAO,KAAK,MAAL,CAAY,QAAZ,CAAqB,UAArB,CAAgC,MAAvC;AACD;;;sBAEW,G,EAAK;AACf,WAAK,MAAL,CAAY,QAAZ,GAAuB,KAAK,aAAL,CAAmB,KAAK,YAAL,CAAkB,EAAC,UAAU,EAAC,OAAO,GAAR,EAAX,EAAlB,CAAnB,CAAvB;AACD,K;wBAEa;AACZ,aAAO,KAAK,MAAL,CAAY,QAAZ,CAAqB,UAArB,CAAgC,KAAvC;AACD;;;;;QAQD,G,GAAA,G","file":"Box.js","sourcesContent":["import * as THREE from 'three';\r\nimport * as Physijs from '../physics/index.js';\r\n\r\nimport {Shape} from '../core/Shape';\r\nimport {extend} from '../extras/api';\r\n\r\nclass Box extends Shape {\r\n  constructor(params = {}) {\r\n    super(params, 'box');\r\n\r\n    extend(params.geometry, {\r\n      width: 1,\r\n      height: 1,\r\n      depth: 1\r\n    });\r\n\r\n    if (params.build) {\r\n      this.build(params);\r\n      super.wrap();\r\n    }\r\n  }\r\n\r\n  build(params = {}) {\r\n    const Mesh = this.physics ? Physijs.BoxMesh : THREE.Mesh;\r\n    const material = super._initMaterial(params.material);\r\n\r\n    return new Promise((resolve) => {\r\n      this.setNative(new Mesh(\r\n        this.buildGeometry(params),\r\n        material,\r\n        params.mass\r\n      ));\r\n\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  buildGeometry(params = {}) {\r\n    return new THREE.BoxGeometry(\r\n      params.geometry.width,\r\n      params.geometry.height,\r\n      params.geometry.depth\r\n    );\r\n  }\r\n\r\n  set G_width(val) {\r\n    this.native.geometry = this.buildGeometry(this.updateParams({geometry: {width: val}}));\r\n  }\r\n\r\n  get G_width() {\r\n    return this.native.geometry.parameters.width;\r\n  }\r\n\r\n  set G_height(val) {\r\n    this.native.geometry = this.buildGeometry(this.updateParams({geometry: {height: val}}));\r\n  }\r\n\r\n  get G_height() {\r\n    return this.native.geometry.parameters.height;\r\n  }\r\n\r\n  set G_depth(val) {\r\n    this.native.geometry = this.buildGeometry(this.updateParams({geometry: {depth: val}}));\r\n  }\r\n\r\n  get G_depth() {\r\n    return this.native.geometry.parameters.depth;\r\n  }\r\n\r\n  clone() {\r\n    return new Box({build: false}).copy(this);\r\n  }\r\n}\r\n\r\nexport {\r\n  Box\r\n};\r\n"]}