{"version":3,"sources":["meshes/Cylinder.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;IAAY,K;;AACZ;;;;AAEA;;AACA;;;;;;IAEM,Q;;;AACJ,sBAAyB;AAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA;;AAAA,kHACjB,MADiB,EACT,UADS;;AAGvB,qBAAO,OAAO,QAAd,EAAwB;;AAEtB,iBAAW,CAFW;AAGtB,oBAAc,CAHQ;AAItB,cAAQ,CAJc;AAKtB,sBAAgB;;AALM,KAAxB;;AASA,UAAK,KAAL,CAAW,MAAX;;AAEA;AAduB;AAexB;;;;4BAEkB;AAAA,UAAb,MAAa,yDAAJ,EAAI;;AACjB,UAAM,SAAS,IAAf;UACE,OAAO,KAAK,OAAL,GAAe,gBAAQ,YAAvB,GAAsC,MAAM,IADrD;UAEE,mHAA+B,OAAO,QAAtC,CAFF;;AAIA,aAAO,sBAAY,UAAC,OAAD,EAAa;AAC9B,eAAO,SAAP,CAAiB,IAAI,IAAJ,CACf,IAAI,MAAM,gBAAV,CAEE,OAAO,QAAP,CAAgB,SAFlB,EAGE,OAAO,QAAP,CAAgB,YAHlB,EAIE,OAAO,QAAP,CAAgB,MAJlB,EAKE,OAAO,QAAP,CAAgB,cALlB,CADe,EAUf,QAVe,EAWf,OAAO,IAXQ,CAAjB;;AAcA;AACD,OAhBM,CAAP;AAiBD;;;4BAEO;AACN,aAAO,IAAI,QAAJ,CAAa,KAAK,SAAL,EAAb,EAA+B,KAAK,KAApC,EAA2C,IAA3C,CAAgD,IAAhD,CAAP;AACD;;;;;QAID,Q,GAAA,Q","file":"Cylinder.js","sourcesContent":["import * as THREE from 'three';\nimport Physijs  from '../physics/physi.js';\n\nimport {Shape} from '../core/Shape';\nimport {extend} from '../extras/api';\n\nclass Cylinder extends Shape {\n  constructor(params = {}) {\n    super(params, 'cylinder');\n\n    extend(params.geometry, {\n\n      radiusTop: 1,\n      radiusBottom: 1,\n      height: 1,\n      radiusSegments: 32\n\n    });\n\n    this.build(params);\n\n    super.wrap();\n  }\n\n  build(params = {}) {\n    const _scope = this,\n      Mesh = this.physics ? Physijs.CylinderMesh : THREE.Mesh,\n      material = super._initMaterial(params.material);\n\n    return new Promise((resolve) => {\n      _scope.setNative(new Mesh(\n        new THREE.CylinderGeometry(\n\n          params.geometry.radiusTop,\n          params.geometry.radiusBottom,\n          params.geometry.height,\n          params.geometry.radiusSegments\n\n        ),\n\n        material,\n        params.mass\n      ));\n\n      resolve();\n    });\n  }\n\n  clone() {\n    return new Cylinder(this.getParams(), this._type).copy(this);\n  }\n}\n\nexport {\n  Cylinder\n};\n"]}